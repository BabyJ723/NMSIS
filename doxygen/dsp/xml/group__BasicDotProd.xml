<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__BasicDotProd" kind="group">
    <compoundname>BasicDotProd</compoundname>
    <title>Vector Dot Product</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__BasicDotProd_1gade83dc52739721f1b3b28f1485a1d73e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_dot_prod_f32</definition>
        <argsstring>(const float32_t *pSrcA, const float32_t *pSrcB, uint32_t blockSize, float32_t *result)</argsstring>
        <name>riscv_dot_prod_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Dot product of floating-point vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>output result returned here. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Source/BasicMathFunctions/riscv_dot_prod_f32.c" line="63" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Source/BasicMathFunctions/riscv_dot_prod_f32.c" bodystart="63" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicDotProd_1ga96cb833c8f4589f8f2dd04319c7fc176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_dot_prod_q15</definition>
        <argsstring>(const q15_t *pSrcA, const q15_t *pSrcB, uint32_t blockSize, q63_t *result)</argsstring>
        <name>riscv_dot_prod_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type>q63_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Dot product of Q15 vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>output result returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The intermediate multiplications are in 1.15 x 1.15 = 2.30 format and these results are added to a 64-bit accumulator in 34.30 format. Nonsaturating additions are used and given that there are 33 guard bits in the accumulator there is no risk of overflow. The return result is in 34.30 format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Source/BasicMathFunctions/riscv_dot_prod_q15.c" line="57" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Source/BasicMathFunctions/riscv_dot_prod_q15.c" bodystart="57" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicDotProd_1ga9684c131effb1a08bc4e562ec3439513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_dot_prod_q31</definition>
        <argsstring>(const q31_t *pSrcA, const q31_t *pSrcB, uint32_t blockSize, q63_t *result)</argsstring>
        <name>riscv_dot_prod_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type>q63_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Dot product of Q31 vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>output result returned here. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The intermediate multiplications are in 1.31 x 1.31 = 2.62 format and these are truncated to 2.48 format by discarding the lower 14 bits. The 2.48 result is then added without saturation to a 64-bit accumulator in 16.48 format. There are 15 guard bits in the accumulator and there is no risk of overflow as long as the length of the vectors is less than 2^16 elements. The return result is in 16.48 format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Source/BasicMathFunctions/riscv_dot_prod_q31.c" line="58" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Source/BasicMathFunctions/riscv_dot_prod_q31.c" bodystart="58" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicDotProd_1ga94b781f333bbccd4c5901da6fefb6458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_dot_prod_q7</definition>
        <argsstring>(const q7_t *pSrcA, const q7_t *pSrcB, uint32_t blockSize, q31_t *result)</argsstring>
        <name>riscv_dot_prod_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Dot product of Q7 vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">result</parametername>
</parameternamelist>
<parameterdescription>
<para>output result returned here </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The intermediate multiplications are in 1.7 x 1.7 = 2.14 format and these results are added to an accumulator in 18.14 format. Nonsaturating additions are used and there is no danger of wrap around as long as the vectors are less than 2^18 elements long. The return result is in 18.14 format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Source/BasicMathFunctions/riscv_dot_prod_q7.c" line="57" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Source/BasicMathFunctions/riscv_dot_prod_q7.c" bodystart="57" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Computes the dot product of two vectors. The vectors are multiplied element-by-element and then summed.</para><para><preformatted>
    sum = pSrcA[0]*pSrcB[0] + pSrcA[1]*pSrcB[1] + ... + pSrcA[blockSize-1]*pSrcB[blockSize-1]
</preformatted></para><para>There are separate functions for floating-point, Q7, Q15, and Q31 data types. </para>    </detaileddescription>
  </compounddef>
</doxygen>
