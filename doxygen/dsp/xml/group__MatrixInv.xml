<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__MatrixInv" kind="group">
    <compoundname>MatrixInv</compoundname>
    <title>Matrix Inverse</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__MatrixInv_1gafe1cdc037cf164c23ae8f5d0e4e5582b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>riscv_status</type>
        <definition>riscv_status riscv_mat_inverse_f32</definition>
        <argsstring>(const riscv_matrix_instance_f32 *pSrc, riscv_matrix_instance_f32 *pDst)</argsstring>
        <name>riscv_mat_inverse_f32</name>
        <param>
          <type>const <ref refid="structriscv__matrix__instance__f32" kindref="compound">riscv_matrix_instance_f32</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="structriscv__matrix__instance__f32" kindref="compound">riscv_matrix_instance_f32</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Floating-point matrix inverse. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>execution status<itemizedlist>
<listitem><para>RISCV_MATH_SUCCESS : Operation successful</para></listitem><listitem><para>RISCV_MATH_SIZE_MISMATCH : Matrix size check failed</para></listitem><listitem><para>RISCV_MATH_SINGULAR : Input matrix is found to be singular (non-invertible) </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/MatrixFunctions/riscv_mat_inverse_f32.c" line="505" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/MatrixFunctions/riscv_mat_inverse_f32.c" bodystart="505" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="group__MatrixInv_1ga953ffef0728e932d1daaaccdfd69d843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>riscv_status</type>
        <definition>riscv_status riscv_mat_inverse_f64</definition>
        <argsstring>(const riscv_matrix_instance_f64 *pSrc, riscv_matrix_instance_f64 *pDst)</argsstring>
        <name>riscv_mat_inverse_f64</name>
        <param>
          <type>const <ref refid="structriscv__matrix__instance__f64" kindref="compound">riscv_matrix_instance_f64</ref> *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type><ref refid="structriscv__matrix__instance__f64" kindref="compound">riscv_matrix_instance_f64</ref> *</type>
          <declname>pDst</declname>
        </param>
        <briefdescription>
<para>Floating-point (64 bit) matrix inverse. </para>        </briefdescription>
        <detaileddescription>
<para>Floating-point matrix inverse.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to input matrix structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output matrix structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>execution status<itemizedlist>
<listitem><para>RISCV_MATH_SUCCESS : Operation successful</para></listitem><listitem><para>RISCV_MATH_SIZE_MISMATCH : Matrix size check failed</para></listitem><listitem><para>RISCV_MATH_SINGULAR : Input matrix is found to be singular (non-invertible) </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/MatrixFunctions/riscv_mat_inverse_f64.c" line="52" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/MatrixFunctions/riscv_mat_inverse_f64.c" bodystart="52" bodyend="670"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Computes the inverse of a matrix.</para><para>The inverse is defined only if the input matrix is square and non-singular (the determinant is non-zero). The function checks that the input and output matrices are square and of the same size.</para><para>Matrix inversion is numerically sensitive and the NMSIS DSP library only supports matrix inversion of floating-point matrices.</para><para><simplesect kind="par"><title>Algorithm</title><para>The Gauss-Jordan method is used to find the inverse. The algorithm performs a sequence of elementary row-operations until it reduces the input matrix to an identity matrix. Applying the same sequence of elementary row-operations to an identity matrix yields the inverse matrix. If the input matrix is singular, then the algorithm terminates and returns error status <computeroutput>RISCV_MATH_SINGULAR</computeroutput>. <image type="html" name="MatrixInverse.png">Matrix Inverse of a 3 x 3 matrix using Gauss-Jordan Method</image>
</para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
