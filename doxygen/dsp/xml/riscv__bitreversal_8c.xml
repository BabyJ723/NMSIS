<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="riscv__bitreversal_8c" kind="file">
    <compoundname>riscv_bitreversal.c</compoundname>
    <includes refid="riscv__math_8h" local="yes">riscv_math.h</includes>
    <includes refid="riscv__common__tables_8h" local="yes">riscv_common_tables.h</includes>
    <includedby refid="TransformFunctions_8c" local="yes">TransformFunctions.c</includedby>
      <sectiondef kind="func">
      <memberdef kind="function" id="riscv__bitreversal_8c_1a4b5dcd95ed73c9d848d7f99cc832b76a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_bitreversal_f32</definition>
        <argsstring>(float32_t *pSrc, uint16_t fftSize, uint16_t bitRevFactor, const uint16_t *pBitRevTab)</argsstring>
        <name>riscv_bitreversal_f32</name>
        <param>
          <type>float32_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fftSize</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bitRevFactor</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>pBitRevTab</declname>
        </param>
        <briefdescription>
<para>In-place floating-point bit reversal function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to in-place floating-point data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fftSize</parametername>
</parameternamelist>
<parameterdescription>
<para>length of FFT </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bitRevFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>bit reversal modifier that supports different size FFTs with the same bit reversal table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pBitRevTab</parametername>
</parameternamelist>
<parameterdescription>
<para>points to bit reversal table </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/TransformFunctions/riscv_bitreversal.c" line="42" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/TransformFunctions/riscv_bitreversal.c" bodystart="42" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="riscv__bitreversal_8c_1aa325fa38a584ed79a543d2551690e01b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_bitreversal_q31</definition>
        <argsstring>(q31_t *pSrc, uint32_t fftLen, uint16_t bitRevFactor, const uint16_t *pBitRevTab)</argsstring>
        <name>riscv_bitreversal_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bitRevFactor</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>pBitRevTab</declname>
        </param>
        <briefdescription>
<para>In-place Q31 bit reversal function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to in-place Q31 data buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fftLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of FFT. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bitRevFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>bit reversal modifier that supports different size FFTs with the same bit reversal table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pBitRevTab</parametername>
</parameternamelist>
<parameterdescription>
<para>points to bit reversal table </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/TransformFunctions/riscv_bitreversal.c" line="113" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/TransformFunctions/riscv_bitreversal.c" bodystart="113" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="riscv__bitreversal_8c_1aa4d89ca9f68ab94b759512685c719406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_bitreversal_q15</definition>
        <argsstring>(q15_t *pSrc16, uint32_t fftLen, uint16_t bitRevFactor, const uint16_t *pBitRevTab)</argsstring>
        <name>riscv_bitreversal_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>pSrc16</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fftLen</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>bitRevFactor</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>pBitRevTab</declname>
        </param>
        <briefdescription>
<para>In-place Q15 bit reversal function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">pSrc16</parametername>
</parameternamelist>
<parameterdescription>
<para>points to in-place Q15 data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fftLen</parametername>
</parameternamelist>
<parameterdescription>
<para>length of FFT </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bitRevFactor</parametername>
</parameternamelist>
<parameterdescription>
<para>bit reversal modifier that supports different size FFTs with the same bit reversal table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pBitRevTab</parametername>
</parameternamelist>
<parameterdescription>
<para>points to bit reversal table </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/TransformFunctions/riscv_bitreversal.c" line="184" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/TransformFunctions/riscv_bitreversal.c" bodystart="184" bodyend="230"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Project:<sp/><sp/><sp/><sp/><sp/><sp/>NMSIS<sp/>DSP<sp/>Library</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Title:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>riscv_bitreversal.c</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Description:<sp/><sp/>Bitreversal<sp/>functions</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>$Date:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18.<sp/>March<sp/>2019</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>$Revision:<sp/><sp/><sp/><sp/>V1.6.0</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Target<sp/>Processor:<sp/>RISC-V<sp/>Cores</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2010-2019<sp/>ARM<sp/>Limited<sp/>or<sp/>its<sp/>affiliates.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nuclei<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);<sp/>you<sp/>may</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,<sp/>WITHOUT</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_common_tables.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>riscv_bitreversal_f32(</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float32_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>fftSize,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>bitRevFactor,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*<sp/>pBitRevTab)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>fftLenBy2,<sp/>fftLenBy2p1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>uint16_t<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>float32_t<sp/>in;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Initializations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>j<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>fftLenBy2<sp/>=<sp/>fftSize<sp/>&gt;&gt;<sp/>1U;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>fftLenBy2p1<sp/>=<sp/>(fftSize<sp/>&gt;&gt;<sp/>1U)<sp/>+<sp/>1U;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bit<sp/>Reversal<sp/>Implementation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;=<sp/>(fftLenBy2<sp/>-<sp/>2U);<sp/>i<sp/>+=<sp/>2U)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>j)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i]<sp/>&lt;-&gt;<sp/>pSrc[j];<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[2U<sp/>*<sp/>i];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>i]<sp/>=<sp/>pSrc[2U<sp/>*<sp/>j];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>j]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+1U]<sp/>&lt;-&gt;<sp/>pSrc[j+1U]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>i)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>i)<sp/>+<sp/>1U]<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>j)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>j)<sp/>+<sp/>1U]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+fftLenBy2p1]<sp/>&lt;-&gt;<sp/>pSrc[j+fftLenBy2p1]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[2U<sp/>*<sp/>(i<sp/>+<sp/>fftLenBy2p1)];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>(i<sp/>+<sp/>fftLenBy2p1)]<sp/>=<sp/>pSrc[2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2p1)];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2p1)]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+fftLenBy2p1+1U]<sp/>&lt;-&gt;<sp/>pSrc[j+fftLenBy2p1+1U]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>(i<sp/>+<sp/>fftLenBy2p1))<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>(i<sp/>+<sp/>fftLenBy2p1))<sp/>+<sp/>1U]<sp/>=</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2p1))<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2p1))<sp/>+<sp/>1U]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+1U]<sp/>&lt;-&gt;<sp/>pSrc[j+1U]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[2U<sp/>*<sp/>(i<sp/>+<sp/>1U)];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>(i<sp/>+<sp/>1U)]<sp/>=<sp/>pSrc[2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2)];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2)]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+2U]<sp/>&lt;-&gt;<sp/>pSrc[j+2U]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>(i<sp/>+<sp/>1U))<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>(i<sp/>+<sp/>1U))<sp/>+<sp/>1U]<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2))<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2))<sp/>+<sp/>1U]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Reading<sp/>the<sp/>index<sp/>for<sp/>the<sp/>bit<sp/>reversal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>*pBitRevTab;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Updating<sp/>the<sp/>bit<sp/>reversal<sp/>index<sp/>depending<sp/>on<sp/>the<sp/>fft<sp/>length<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pBitRevTab<sp/>+=<sp/>bitRevFactor;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>riscv_bitreversal_q31(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q31_t<sp/>*<sp/>pSrc,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>fftLen,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>bitRevFactor,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*<sp/>pBitRevTab)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/>fftLenBy2,<sp/>fftLenBy2p1,<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/>q31_t<sp/>in;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Initializations<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>j<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>fftLenBy2<sp/>=<sp/>fftLen<sp/>/<sp/>2U;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>fftLenBy2p1<sp/>=<sp/>(fftLen<sp/>/<sp/>2U)<sp/>+<sp/>1U;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bit<sp/>Reversal<sp/>Implementation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;=<sp/>(fftLenBy2<sp/>-<sp/>2U);<sp/>i<sp/>+=<sp/>2U)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>j)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i]<sp/>&lt;-&gt;<sp/>pSrc[j];<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[2U<sp/>*<sp/>i];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>i]<sp/>=<sp/>pSrc[2U<sp/>*<sp/>j];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>j]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+1U]<sp/>&lt;-&gt;<sp/>pSrc[j+1U]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>i)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>i)<sp/>+<sp/>1U]<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>j)<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>j)<sp/>+<sp/>1U]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+fftLenBy2p1]<sp/>&lt;-&gt;<sp/>pSrc[j+fftLenBy2p1]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[2U<sp/>*<sp/>(i<sp/>+<sp/>fftLenBy2p1)];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>(i<sp/>+<sp/>fftLenBy2p1)]<sp/>=<sp/>pSrc[2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2p1)];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2p1)]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+fftLenBy2p1+1U]<sp/>&lt;-&gt;<sp/>pSrc[j+fftLenBy2p1+1U]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>(i<sp/>+<sp/>fftLenBy2p1))<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>(i<sp/>+<sp/>fftLenBy2p1))<sp/>+<sp/>1U]<sp/>=</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2p1))<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2p1))<sp/>+<sp/>1U]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+1U]<sp/>&lt;-&gt;<sp/>pSrc[j+1U]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[2U<sp/>*<sp/>(i<sp/>+<sp/>1U)];</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>(i<sp/>+<sp/>1U)]<sp/>=<sp/>pSrc[2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2)];</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2)]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+2U]<sp/>&lt;-&gt;<sp/>pSrc[j+2U]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>(i<sp/>+<sp/>1U))<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>(i<sp/>+<sp/>1U))<sp/>+<sp/>1U]<sp/>=<sp/>pSrc[(2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2))<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[(2U<sp/>*<sp/>(j<sp/>+<sp/>fftLenBy2))<sp/>+<sp/>1U]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Reading<sp/>the<sp/>index<sp/>for<sp/>the<sp/>bit<sp/>reversal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>*pBitRevTab;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Updating<sp/>the<sp/>bit<sp/>reversal<sp/>index<sp/>depending<sp/>on<sp/>the<sp/>fft<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pBitRevTab<sp/>+=<sp/>bitRevFactor;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>riscv_bitreversal_q15(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q15_t<sp/>*<sp/>pSrc16,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>fftLen,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>bitRevFactor,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*<sp/>pBitRevTab)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>q31_t<sp/>*pSrc<sp/>=<sp/>(q31_t<sp/>*)<sp/>pSrc16;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/>q31_t<sp/>in;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/>fftLenBy2,<sp/>fftLenBy2p1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>uint32_t<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Initializations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>j<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>fftLenBy2<sp/>=<sp/>fftLen<sp/>/<sp/>2U;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>fftLenBy2p1<sp/>=<sp/>(fftLen<sp/>/<sp/>2U)<sp/>+<sp/>1U;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bit<sp/>Reversal<sp/>Implementation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;=<sp/>(fftLenBy2<sp/>-<sp/>2U);<sp/>i<sp/>+=<sp/>2U)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>j)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i]<sp/>&lt;-&gt;<sp/>pSrc[j];<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+1U]<sp/>&lt;-&gt;<sp/>pSrc[j+1U]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[i];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[i]<sp/>=<sp/>pSrc[j];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[j]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i<sp/>+<sp/>fftLenBy2p1]<sp/>&lt;-&gt;<sp/>pSrc[j<sp/>+<sp/>fftLenBy2p1];<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i<sp/>+<sp/>fftLenBy2p1+1U]<sp/>&lt;-&gt;<sp/>pSrc[j<sp/>+<sp/>fftLenBy2p1+1U]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[i<sp/>+<sp/>fftLenBy2p1];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[i<sp/>+<sp/>fftLenBy2p1]<sp/>=<sp/>pSrc[j<sp/>+<sp/>fftLenBy2p1];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[j<sp/>+<sp/>fftLenBy2p1]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+1U]<sp/>&lt;-&gt;<sp/>pSrc[j+fftLenBy2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>pSrc[i+2]<sp/>&lt;-&gt;<sp/>pSrc[j+fftLenBy2+1U]<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>=<sp/>pSrc[i<sp/>+<sp/>1U];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[i<sp/>+<sp/>1U]<sp/>=<sp/>pSrc[j<sp/>+<sp/>fftLenBy2];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pSrc[j<sp/>+<sp/>fftLenBy2]<sp/>=<sp/>in;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Reading<sp/>the<sp/>index<sp/>for<sp/>the<sp/>bit<sp/>reversal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>*pBitRevTab;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Updating<sp/>the<sp/>bit<sp/>reversal<sp/>index<sp/>depending<sp/>on<sp/>the<sp/>fft<sp/>length<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pBitRevTab<sp/>+=<sp/>bitRevFactor;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/TransformFunctions/riscv_bitreversal.c"/>
  </compounddef>
</doxygen>
