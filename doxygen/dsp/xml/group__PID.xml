<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__PID" kind="group">
    <compoundname>PID</compoundname>
    <title>PID Motor Control</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__PID_1gabafba8b6028791a8df9336fda2d89eb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE float32_t</type>
        <definition>__STATIC_FORCEINLINE float32_t riscv_pid_f32</definition>
        <argsstring>(riscv_pid_instance_f32 *S, float32_t in)</argsstring>
        <name>riscv_pid_f32</name>
        <param>
          <type><ref refid="structriscv__pid__instance__f32" kindref="compound">riscv_pid_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Process function for the floating-point PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>is an instance of the floating-point PID Control structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>processed output sample. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Include/riscv_math.h" line="4907" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Include/riscv_math.h" bodystart="4907" bodyend="4925"/>
      </memberdef>
      <memberdef kind="function" id="group__PID_1ga107785522e399b35e5ba5b9181d57726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t riscv_pid_q31</definition>
        <argsstring>(riscv_pid_instance_q31 *S, q31_t in)</argsstring>
        <name>riscv_pid_q31</name>
        <param>
          <type><ref refid="structriscv__pid__instance__q31" kindref="compound">riscv_pid_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Process function for the Q31 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 PID Control structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>processed output sample.</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The function is implemented using an internal 64-bit accumulator. The accumulator has a 2.62 format and maintains full precision of the intermediate multiplication results but provides only a single guard bit. Thus, if the accumulator result overflows it wraps around rather than clip. In order to avoid overflows completely the input signal must be scaled down by 2 bits as there are four additions. After all multiply-accumulates are performed, the 2.62 accumulator is truncated to 1.32 format and then saturated to 1.31 format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Include/riscv_math.h" line="4940" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Include/riscv_math.h" bodystart="4940" bodyend="4969"/>
      </memberdef>
      <memberdef kind="function" id="group__PID_1gaf1220917c29e049f8127ca8808bd703f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q15_t</type>
        <definition>__STATIC_FORCEINLINE q15_t riscv_pid_q15</definition>
        <argsstring>(riscv_pid_instance_q15 *S, q15_t in)</argsstring>
        <name>riscv_pid_q15</name>
        <param>
          <type><ref refid="structriscv__pid__instance__q15" kindref="compound">riscv_pid_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Process function for the Q15 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 PID Control structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">in</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>processed output sample.</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The function is implemented using a 64-bit internal accumulator. Both Gains and state variables are represented in 1.15 format and multiplications yield a 2.30 result. The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format. There is no risk of internal overflow with this approach and the full precision of intermediate multiplications is preserved. After all additions have been performed, the accumulator is truncated to 34.15 format by discarding low 15 bits. Lastly, the accumulator is saturated to yield a result in 1.15 format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Include/riscv_math.h" line="4986" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Include/riscv_math.h" bodystart="4986" bodyend="5023"/>
      </memberdef>
      <memberdef kind="function" id="group__PID_1ga88096786fde77479ae2fc7f0b4a060b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_pid_init_f32</definition>
        <argsstring>(riscv_pid_instance_f32 *S, int32_t resetStateFlag)</argsstring>
        <name>riscv_pid_init_f32</name>
        <param>
          <type><ref refid="structriscv__pid__instance__f32" kindref="compound">riscv_pid_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>resetStateFlag</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the PID structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">resetStateFlag</parametername>
</parameternamelist>
<parameterdescription>
<para><itemizedlist>
<listitem><para>value = 0: no change in state</para></listitem><listitem><para>value = 1: reset state </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Details</title><para>The <computeroutput>resetStateFlag</computeroutput> specifies whether to set state to zero or not. <linebreak/>
 The function computes the structure fields: <computeroutput>A0</computeroutput>, <computeroutput>A1</computeroutput> <computeroutput>A2</computeroutput> using the proportional gain( <computeroutput>Kp</computeroutput>), integral gain( <computeroutput>Ki</computeroutput>) and derivative gain( <computeroutput>Kd</computeroutput>) also sets the state variables to all zeros. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_init_f32.c" line="52" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_init_f32.c" bodystart="52" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="group__PID_1ga3addd5e4ea6d8aeaf4f1ecd7cf5c6c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_pid_init_q15</definition>
        <argsstring>(riscv_pid_instance_q15 *S, int32_t resetStateFlag)</argsstring>
        <name>riscv_pid_init_q15</name>
        <param>
          <type><ref refid="structriscv__pid__instance__q15" kindref="compound">riscv_pid_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>resetStateFlag</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 PID structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">resetStateFlag</parametername>
</parameternamelist>
<parameterdescription>
<para><itemizedlist>
<listitem><para>value = 0: no change in state</para></listitem><listitem><para>value = 1: reset state </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Details</title><para>The <computeroutput>resetStateFlag</computeroutput> specifies whether to set state to zero or not. <linebreak/>
 The function computes the structure fields: <computeroutput>A0</computeroutput>, <computeroutput>A1</computeroutput> <computeroutput>A2</computeroutput> using the proportional gain( <computeroutput>Kp</computeroutput>), integral gain( <computeroutput>Ki</computeroutput>) and derivative gain( <computeroutput>Kd</computeroutput>) also sets the state variables to all zeros. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_init_q15.c" line="52" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_init_q15.c" bodystart="52" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="group__PID_1ga2ca8b149095d04d8dc73e4a052be1c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_pid_init_q31</definition>
        <argsstring>(riscv_pid_instance_q31 *S, int32_t resetStateFlag)</argsstring>
        <name>riscv_pid_init_q31</name>
        <param>
          <type><ref refid="structriscv__pid__instance__q31" kindref="compound">riscv_pid_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>resetStateFlag</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q31 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 PID structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">resetStateFlag</parametername>
</parameternamelist>
<parameterdescription>
<para><itemizedlist>
<listitem><para>value = 0: no change in state</para></listitem><listitem><para>value = 1: reset state </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Details</title><para>The <computeroutput>resetStateFlag</computeroutput> specifies whether to set state to zero or not. <linebreak/>
 The function computes the structure fields: <computeroutput>A0</computeroutput>, <computeroutput>A1</computeroutput> <computeroutput>A2</computeroutput> using the proportional gain( <computeroutput>Kp</computeroutput>), integral gain( <computeroutput>Ki</computeroutput>) and derivative gain( <computeroutput>Kd</computeroutput>) also sets the state variables to all zeros. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_init_q31.c" line="52" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_init_q31.c" bodystart="52" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="group__PID_1ga436fc2266fe54087bc8b203eb675087c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_pid_reset_f32</definition>
        <argsstring>(riscv_pid_instance_f32 *S)</argsstring>
        <name>riscv_pid_reset_f32</name>
        <param>
          <type><ref refid="structriscv__pid__instance__f32" kindref="compound">riscv_pid_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
<para>Reset function for the floating-point PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point PID structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Details</title><para>The function resets the state buffer to zeros. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_reset_f32.c" line="46" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_reset_f32.c" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="group__PID_1gaf85e1dc20d915a787ce687e1a80f2bdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_pid_reset_q15</definition>
        <argsstring>(riscv_pid_instance_q15 *S)</argsstring>
        <name>riscv_pid_reset_q15</name>
        <param>
          <type><ref refid="structriscv__pid__instance__q15" kindref="compound">riscv_pid_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
<para>Reset function for the Q15 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 PID structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Details</title><para>The function resets the state buffer to zeros. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_reset_q15.c" line="46" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_reset_q15.c" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="group__PID_1ga9014e1ffacd82a5ecf90f11aa626caab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_pid_reset_q31</definition>
        <argsstring>(riscv_pid_instance_q31 *S)</argsstring>
        <name>riscv_pid_reset_q31</name>
        <param>
          <type><ref refid="structriscv__pid__instance__q31" kindref="compound">riscv_pid_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <briefdescription>
<para>Reset function for the Q31 PID Control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 PID structure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Details</title><para>The function resets the state buffer to zeros. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_reset_q31.c" line="46" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/ControllerFunctions/riscv_pid_reset_q31.c" bodystart="46" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A Proportional Integral Derivative (PID) controller is a generic feedback control loop mechanism widely used in industrial control systems. A PID controller is the most commonly used type of feedback controller.</para><para>This set of functions implements (PID) controllers for Q15, Q31, and floating-point data types. The functions operate on a single sample of data and each call to the function returns a single processed value. <computeroutput>S</computeroutput> points to an instance of the PID control data structure. <computeroutput>in</computeroutput> is the input sample value. The functions return the output value.</para><para><simplesect kind="par"><title>Algorithm:</title><para><preformatted>
   y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
   A0 = Kp + Ki + Kd
   A1 = (-Kp ) - (2 * Kd )
   A2 = Kd
</preformatted></para></simplesect>
<simplesect kind="par"><title></title><para>where <computeroutput>Kp</computeroutput> is proportional constant, <computeroutput>Ki</computeroutput> is Integral constant and <computeroutput>Kd</computeroutput> is Derivative constant</para></simplesect>
<simplesect kind="par"><title></title><para><image type="html" name="PID.png">Proportional Integral Derivative Controller</image>
 </para></simplesect>
<simplesect kind="par"><title></title><para>The PID controller calculates an &quot;error&quot; value as the difference between the measured output and the reference input. The controller attempts to minimize the error by adjusting the process control inputs. The proportional value determines the reaction to the current error, the integral value determines the reaction based on the sum of recent errors, and the derivative value determines the reaction based on the rate at which the error has been changing.</para></simplesect>
<simplesect kind="par"><title>Instance Structure</title><para>The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instance data structure. A separate instance structure must be defined for each PID Controller. There are separate instance structure declarations for each of the 3 supported data types.</para></simplesect>
<simplesect kind="par"><title>Reset Functions</title><para>There is also an associated reset function for each data type which clears the state array.</para></simplesect>
<simplesect kind="par"><title>Initialization Functions</title><para>There is also an associated initialization function for each data type. The initialization function performs the following operations:<itemizedlist>
<listitem><para>Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.</para></listitem><listitem><para>Zeros out the values in the state buffer.</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="par"><title></title><para>Instance structure cannot be placed into a const data section and it is recommended to use the initialization function.</para></simplesect>
<simplesect kind="par"><title>Fixed-Point Behavior</title><para>Care must be taken when using the fixed-point versions of the PID Controller functions. In particular, the overflow and saturation behavior of the accumulator used in each function must be considered. Refer to the function specific documentation below for usage guidelines. </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
