<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__float__to__x" kind="group">
    <compoundname>float_to_x</compoundname>
    <title>Convert 32-bit floating point value</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__float__to__x_1ga5c2a33af297b10b8cc1196abe0d07a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_float_to_q15</definition>
        <argsstring>(const float32_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_float_to_q15</name>
        <param>
          <type>const float32_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the floating-point vector to Q15 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the floating-point input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the Q15 output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Details</title><para>The equation used for the conversion process is: <preformatted>
    pDst[n] = (q15_t)(pSrc[n] * 32768);   0 &lt;= n &lt; blockSize.
</preformatted></para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The function uses saturating arithmetic. Results outside of the allowable Q15 range [0x8000 0x7FFF] are saturated.</para></simplesect>
<simplesect kind="note"><para>In order to apply rounding, the library should be rebuilt with the ROUNDING macro defined in the preprocessor section of project options. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/SupportFunctions/riscv_float_to_q15.c" line="154" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/SupportFunctions/riscv_float_to_q15.c" bodystart="154" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="group__float__to__x_1ga41b2ddb89a3c532d418b9626c19b0c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_float_to_q31</definition>
        <argsstring>(const float32_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_float_to_q31</name>
        <param>
          <type>const float32_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the floating-point vector to Q31 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the floating-point input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the Q31 output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Details</title><para>The equation used for the conversion process is: <preformatted>
    pDst[n] = (q31_t)(pSrc[n] * 2147483648);   0 &lt;= n &lt; blockSize.
</preformatted></para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The function uses saturating arithmetic. Results outside of the allowable Q31 range[0x80000000 0x7FFFFFFF] are saturated.</para></simplesect>
<simplesect kind="note"><para>In order to apply rounding, the library should be rebuilt with the ROUNDING macro defined in the preprocessor section of project options. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/SupportFunctions/riscv_float_to_q31.c" line="160" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/SupportFunctions/riscv_float_to_q31.c" bodystart="160" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="group__float__to__x_1gab077f87fd29e71582fe3da092cea4759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_float_to_q7</definition>
        <argsstring>(const float32_t *pSrc, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_float_to_q7</name>
        <param>
          <type>const float32_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Converts the elements of the floating-point vector to Q7 vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the floating-point input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the Q7 output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the input vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none.</para></simplesect>
<simplesect kind="par"><title>Description:</title><para></para></simplesect>
<simplesect kind="par"><title></title><para>The equation used for the conversion process is: <preformatted>
        pDst[n] = (q7_t)(pSrc[n] * 128);   0 &lt;= n &lt; blockSize.
 </preformatted> </para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior:</title><para></para></simplesect>
<simplesect kind="par"><title></title><para>The function uses saturating arithmetic. Results outside of the allowable Q7 range [0x80 0x7F] will be saturated. </para></simplesect>
<simplesect kind="note"><para>In order to apply rounding, the library should be rebuilt with the ROUNDING macro defined in the preprocessor section of project options. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/SupportFunctions/riscv_float_to_q7.c" line="165" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/SupportFunctions/riscv_float_to_q7.c" bodystart="165" bodyend="249"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
