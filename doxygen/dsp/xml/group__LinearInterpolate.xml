<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__LinearInterpolate" kind="group">
    <compoundname>LinearInterpolate</compoundname>
    <title>Linear Interpolation</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__LinearInterpolate_1gaf5398260d5170ca63d3f67743d8a5533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE float32_t</type>
        <definition>__STATIC_FORCEINLINE float32_t riscv_linear_interp_f32</definition>
        <argsstring>(riscv_linear_interp_instance_f32 *S, float32_t x)</argsstring>
        <name>riscv_linear_interp_f32</name>
        <param>
          <type><ref refid="structriscv__linear__interp__instance__f32" kindref="compound">riscv_linear_interp_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Process function for the floating-point Linear Interpolation Function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">S</parametername>
</parameternamelist>
<parameterdescription>
<para>is an instance of the floating-point Linear Interpolation structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y processed output sample. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Include/riscv_math.h" line="5499" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Include/riscv_math.h" bodystart="5499" bodyend="5540"/>
      </memberdef>
      <memberdef kind="function" id="group__LinearInterpolate_1ga38f1285ec1a9657c1c695b3d1fd9cc38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q31_t</type>
        <definition>__STATIC_FORCEINLINE q31_t riscv_linear_interp_q31</definition>
        <argsstring>(q31_t *pYData, q31_t x, uint32_t nValues)</argsstring>
        <name>riscv_linear_interp_q31</name>
        <param>
          <type>q31_t *</type>
          <declname>pYData</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nValues</declname>
        </param>
        <briefdescription>
<para>Process function for the Q31 Linear Interpolation Function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pYData</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to Q31 Linear Interpolation table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nValues</parametername>
</parameternamelist>
<parameterdescription>
<para>number of table values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y processed output sample.</para></simplesect>
<simplesect kind="par"><title></title><para>Input sample <computeroutput>x</computeroutput> is in 12.20 format which contains 12 bits for table index and 20 bits for fractional part. This function can support maximum of table size 2^12. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Include/riscv_math.h" line="5556" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Include/riscv_math.h" bodystart="5556" bodyend="5598"/>
      </memberdef>
      <memberdef kind="function" id="group__LinearInterpolate_1gac1b8468ad9ef25b0fc03a60574748c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q15_t</type>
        <definition>__STATIC_FORCEINLINE q15_t riscv_linear_interp_q15</definition>
        <argsstring>(q15_t *pYData, q31_t x, uint32_t nValues)</argsstring>
        <name>riscv_linear_interp_q15</name>
        <param>
          <type>q15_t *</type>
          <declname>pYData</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nValues</declname>
        </param>
        <briefdescription>
<para>Process function for the Q15 Linear Interpolation Function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pYData</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to Q15 Linear Interpolation table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nValues</parametername>
</parameternamelist>
<parameterdescription>
<para>number of table values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y processed output sample.</para></simplesect>
<simplesect kind="par"><title></title><para>Input sample <computeroutput>x</computeroutput> is in 12.20 format which contains 12 bits for table index and 20 bits for fractional part. This function can support maximum of table size 2^12. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Include/riscv_math.h" line="5614" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Include/riscv_math.h" bodystart="5614" bodyend="5656"/>
      </memberdef>
      <memberdef kind="function" id="group__LinearInterpolate_1ga49e203bdb9bcdb4511538244c8f30cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__STATIC_FORCEINLINE q7_t</type>
        <definition>__STATIC_FORCEINLINE q7_t riscv_linear_interp_q7</definition>
        <argsstring>(q7_t *pYData, q31_t x, uint32_t nValues)</argsstring>
        <name>riscv_linear_interp_q7</name>
        <param>
          <type>q7_t *</type>
          <declname>pYData</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>nValues</declname>
        </param>
        <briefdescription>
<para>Process function for the Q7 Linear Interpolation Function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pYData</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to Q7 Linear Interpolation table </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>input sample to process </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nValues</parametername>
</parameternamelist>
<parameterdescription>
<para>number of table values </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>y processed output sample.</para></simplesect>
<simplesect kind="par"><title></title><para>Input sample <computeroutput>x</computeroutput> is in 12.20 format which contains 12 bits for table index and 20 bits for fractional part. This function can support maximum of table size 2^12. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Include/riscv_math.h" line="5671" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/DSP/Include/riscv_math.h" bodystart="5671" bodyend="5713"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>end of Inverse park group</para><para>Linear interpolation is a method of curve fitting using linear polynomials. Linear interpolation works by effectively drawing a straight line between two neighboring samples and returning the appropriate point along that line</para><para><simplesect kind="par"><title></title><para><image type="html" name="LinearInterp.png">Linear interpolation</image>
 </para></simplesect>
<simplesect kind="par"><title></title><para>A Linear Interpolate function calculates an output value(y), for the input(x) using linear interpolation of the input values x0, x1( nearest input values) and the output values y0 and y1(nearest output values)</para></simplesect>
<simplesect kind="par"><title>Algorithm:</title><para><preformatted>
      y = y0 + (x - x0) * ((y1 - y0)/(x1-x0))
      where x0, x1 are nearest values of input x
            y0, y1 are nearest values to output y
</preformatted></para></simplesect>
<simplesect kind="par"><title></title><para>This set of functions implements Linear interpolation process for Q7, Q15, Q31, and floating-point data types. The functions operate on a single sample of data and each call to the function returns a single processed value. <computeroutput>S</computeroutput> points to an instance of the Linear Interpolate function data structure. <computeroutput>x</computeroutput> is the input sample value. The functions returns the output value.</para></simplesect>
<simplesect kind="par"><title></title><para>if x is outside of the table boundary, Linear interpolation returns first value of the table if x is below input range and returns last value of table if x is above range. </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
