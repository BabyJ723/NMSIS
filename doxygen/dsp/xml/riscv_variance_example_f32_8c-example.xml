<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="riscv_variance_example_f32_8c-example" kind="example">
    <compoundname>riscv_variance_example_f32.c</compoundname>
    <detaileddescription>
<para><programlisting><codeline><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Copyright<sp/>(C)<sp/>2010-2012<sp/>ARM<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nuclei<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>$Date:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>17.<sp/>January<sp/>2013</highlight></codeline>
<codeline><highlight class="comment">*<sp/>$Revision:<sp/><sp/><sp/><sp/><sp/>V1.4.0</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Project:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NMSIS<sp/>DSP<sp/>Library</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Title:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>riscv_variance_example_f32.c</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Description:<sp/><sp/><sp/>Example<sp/>code<sp/>demonstrating<sp/>variance<sp/>calculation<sp/>of<sp/>input<sp/>sequence.</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Target<sp/>Processor:<sp/>RISC-V<sp/>Cores</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline><highlight class="comment">*<sp/>are<sp/>met:</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>ARM<sp/>LIMITED<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline><highlight class="comment">*<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline><highlight class="comment">*<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline><highlight class="comment">*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline><highlight class="comment">*<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline><highlight class="comment">*<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline><highlight class="comment">*<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline><highlight class="comment">*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline><highlight class="comment">*<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline><highlight class="comment">*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline><highlight class="comment">*<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline><highlight class="comment">*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline><highlight class="comment">*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Defines<sp/>each<sp/>of<sp/>the<sp/>tests<sp/>performed</highlight></codeline>
<codeline><highlight class="comment">*<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_BLOCKSIZE<sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DELTA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.000001f)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Declare<sp/>I/O<sp/>buffers</highlight></codeline>
<codeline><highlight class="comment">*<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>wire1[MAX_BLOCKSIZE];</highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>wire2[MAX_BLOCKSIZE];</highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>wire3[MAX_BLOCKSIZE];</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Test<sp/>input<sp/>data<sp/>for<sp/>Floating<sp/>point<sp/>Variance<sp/>example<sp/>for<sp/>32-blockSize</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Generated<sp/>by<sp/>the<sp/>MATLAB<sp/>randn()<sp/>function</highlight></codeline>
<codeline><highlight class="comment">*<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>testInput_f32[32]<sp/>=</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.432564811528221,<sp/><sp/>-1.665584378238097,<sp/><sp/><sp/>0.125332306474831,<sp/><sp/><sp/>0.287676420358549,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-1.146471350681464,<sp/><sp/><sp/>1.190915465642999,<sp/><sp/><sp/>1.189164201652103,<sp/><sp/>-0.037633276593318,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>0.327292361408654,<sp/><sp/><sp/>0.174639142820925,<sp/><sp/>-0.186708577681439,<sp/><sp/><sp/>0.725790548293303,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.588316543014189,<sp/><sp/><sp/>2.183185818197101,<sp/><sp/>-0.136395883086596,<sp/><sp/><sp/>0.113931313520810,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>1.066768211359189,<sp/><sp/><sp/>0.059281460523605,<sp/><sp/>-0.095648405483669,<sp/><sp/>-0.832349463650022,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>0.294410816392640,<sp/><sp/>-1.336181857937804,<sp/><sp/><sp/>0.714324551818952,<sp/><sp/><sp/>1.623562064446271,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.691775701702287,<sp/><sp/><sp/>0.857996672828263,<sp/><sp/><sp/>1.254001421602532,<sp/><sp/>-1.593729576447477,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-1.440964431901020,<sp/><sp/><sp/>0.571147623658178,<sp/><sp/>-0.399885577715363,<sp/><sp/><sp/>0.689997375464345</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Declare<sp/>Global<sp/>variables</highlight></codeline>
<codeline><highlight class="comment">*<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">uint32_t<sp/>blockSize<sp/>=<sp/>32;</highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/><sp/>refVarianceOut<sp/>=<sp/>0.903941793931839;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Variance<sp/>calculation<sp/>test</highlight></codeline>
<codeline><highlight class="comment">*<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>main(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>riscv_status<sp/>status;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>float32_t<sp/>mean,<sp/>oneByBlockSize;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>float32_t<sp/>variance;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>float32_t<sp/>diff;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>RISCV_MATH_SUCCESS;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;START\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>mean<sp/>value<sp/>of<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>x&apos;<sp/>=<sp/>1/blockSize<sp/>*<sp/>(x(0)*<sp/>1<sp/>+<sp/>x(1)<sp/>*<sp/>1<sp/>+<sp/>...<sp/>+<sp/>x(n-1)<sp/>*<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>wire1<sp/>buffer<sp/>with<sp/>1.0<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__Fill_1ga30d123e67c9f6d27f74dae20a4630241" kindref="member">riscv_fill_f32</ref>(1.0,<sp/><sp/>wire1,<sp/>blockSize);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>dot<sp/>product<sp/>of<sp/>wire1<sp/>and<sp/>wire2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>(x(0)*<sp/>1<sp/>+<sp/>x(1)<sp/>*<sp/>1<sp/>+<sp/>...+<sp/>x(n-1)<sp/>*<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__BasicDotProd_1gade83dc52739721f1b3b28f1485a1d73e" kindref="member">riscv_dot_prod_f32</ref>(testInput_f32,<sp/>wire1,<sp/>blockSize,<sp/>&amp;mean);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>1/blockSize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>oneByBlockSize<sp/>=<sp/>1.0<sp/>/<sp/>(blockSize);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>1/blockSize<sp/>*<sp/>(x(0)*<sp/>1<sp/>+<sp/>x(1)<sp/>*<sp/>1<sp/>+<sp/>...<sp/>+<sp/>x(n-1)<sp/>*<sp/>1)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__BasicMult_1gae63353652b163647d48e82dae770d751" kindref="member">riscv_mult_f32</ref>(&amp;mean,<sp/>&amp;oneByBlockSize,<sp/>&amp;mean,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>variance<sp/>value<sp/>of<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>(1/blockSize)<sp/>*<sp/>(x(0)<sp/>-<sp/>x&apos;)<sp/>*<sp/>(x(0)<sp/>-<sp/>x&apos;)<sp/>+<sp/>(x(1)<sp/>-<sp/>x&apos;)<sp/>*<sp/>(x(1)<sp/>-<sp/>x&apos;)<sp/>+<sp/>...<sp/>+<sp/>(x(n-1)<sp/>-<sp/>x&apos;)<sp/>*<sp/>(x(n-1)<sp/>-<sp/>x&apos;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>wire2<sp/>with<sp/>mean<sp/>value<sp/>x&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__Fill_1ga30d123e67c9f6d27f74dae20a4630241" kindref="member">riscv_fill_f32</ref>(mean,<sp/><sp/>wire2,<sp/>blockSize);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>wire3<sp/>contains<sp/>(x-x&apos;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__BasicSub_1ga2e1928fe086fbaea97c86fc3028d6c85" kindref="member">riscv_sub_f32</ref>(testInput_f32,<sp/>wire2,<sp/>wire3,<sp/>blockSize);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>wire2<sp/>contains<sp/>(x-x&apos;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__copy_1ga2f4fb0541b4d514df044e543c6abfeb3" kindref="member">riscv_copy_f32</ref>(wire3,<sp/>wire2,<sp/>blockSize);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>(x(0)<sp/>-<sp/>x&apos;)<sp/>*<sp/>(x(0)<sp/>-<sp/>x&apos;)<sp/>+<sp/>(x(1)<sp/>-<sp/>x&apos;)<sp/>*<sp/>(x(1)<sp/>-<sp/>x&apos;)<sp/>+<sp/>...<sp/>+<sp/>(x(n-1)<sp/>-<sp/>x&apos;)<sp/>*<sp/>(x(n-1)<sp/>-<sp/>x&apos;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__BasicDotProd_1gade83dc52739721f1b3b28f1485a1d73e" kindref="member">riscv_dot_prod_f32</ref>(wire2,<sp/>wire3,<sp/>blockSize,<sp/>&amp;variance);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>1/blockSize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>oneByBlockSize<sp/>=<sp/>1.0<sp/>/<sp/>(blockSize<sp/>-<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculation<sp/>of<sp/>variance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__BasicMult_1gae63353652b163647d48e82dae770d751" kindref="member">riscv_mult_f32</ref>(&amp;variance,<sp/>&amp;oneByBlockSize,<sp/>&amp;variance,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>absolute<sp/>value<sp/>of<sp/>difference<sp/>between<sp/>ref<sp/>and<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>diff<sp/>=<sp/>fabsf(refVarianceOut<sp/>-<sp/>variance);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Comparison<sp/>of<sp/>variance<sp/>value<sp/>with<sp/>reference<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>&gt;<sp/>DELTA)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>RISCV_MATH_TEST_FAILURE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/>RISCV_MATH_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;SUCCESS\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;FAILURE\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
