<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__FIR__Lattice" kind="group">
    <compoundname>FIR_Lattice</compoundname>
    <title>Finite Impulse Response (FIR) Lattice Filters</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__FIR__Lattice_1ga71be4bcdf299f23f9cc561aaf72b6a3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_fir_lattice_f32</definition>
        <argsstring>(const riscv_fir_lattice_instance_f32 *S, const float32_t *pSrc, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_fir_lattice_f32</name>
        <param>
          <type>const <ref refid="structriscv__fir__lattice__instance__f32" kindref="compound">riscv_fir_lattice_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the floating-point FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point FIR lattice structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_f32.c" line="122" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_f32.c" bodystart="122" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="group__FIR__Lattice_1ga0e52d2c841a9fcacb5cfc2cdac417795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_fir_lattice_init_f32</definition>
        <argsstring>(riscv_fir_lattice_instance_f32 *S, uint16_t numStages, const float32_t *pCoeffs, float32_t *pState)</argsstring>
        <name>riscv_fir_lattice_init_f32</name>
        <param>
          <type><ref refid="structriscv__fir__lattice__instance__f32" kindref="compound">riscv_fir_lattice_instance_f32</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Initialization function for the floating-point FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the floating-point FIR lattice structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter stages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the coefficient buffer. The array is of length numStages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. The array is of length numStages </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_init_f32.c" line="50" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_init_f32.c" bodystart="50" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="group__FIR__Lattice_1ga0aa9f96904832a16f496f42fe87a054a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_fir_lattice_init_q15</definition>
        <argsstring>(riscv_fir_lattice_instance_q15 *S, uint16_t numStages, const q15_t *pCoeffs, q15_t *pState)</argsstring>
        <name>riscv_fir_lattice_init_q15</name>
        <param>
          <type><ref refid="structriscv__fir__lattice__instance__q15" kindref="compound">riscv_fir_lattice_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q15 FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR lattice structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter stages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the coefficient buffer. The array is of length numStages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. The array is of length numStages </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_init_q15.c" line="50" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_init_q15.c" bodystart="50" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="group__FIR__Lattice_1ga1b195a9ff98c1d5f8668e49c559740fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_fir_lattice_init_q31</definition>
        <argsstring>(riscv_fir_lattice_instance_q31 *S, uint16_t numStages, const q31_t *pCoeffs, q31_t *pState)</argsstring>
        <name>riscv_fir_lattice_init_q31</name>
        <param>
          <type><ref refid="structriscv__fir__lattice__instance__q31" kindref="compound">riscv_fir_lattice_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>numStages</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>pCoeffs</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>pState</declname>
        </param>
        <briefdescription>
<para>Initialization function for the Q31 FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 FIR lattice structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numStages</parametername>
</parameternamelist>
<parameterdescription>
<para>number of filter stages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pCoeffs</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the coefficient buffer. The array is of length numStages </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pState</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the state buffer. The array is of length numStages </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_init_q31.c" line="50" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_init_q31.c" bodystart="50" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="group__FIR__Lattice_1ga577c755d5ad2f887455f465d5d0b8f3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_fir_lattice_q15</definition>
        <argsstring>(const riscv_fir_lattice_instance_q15 *S, const q15_t *pSrc, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_fir_lattice_q15</name>
        <param>
          <type>const <ref refid="structriscv__fir__lattice__instance__q15" kindref="compound">riscv_fir_lattice_instance_q15</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for Q15 FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para>Processing function for the Q15 FIR lattice filter.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q15 FIR lattice structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_q15.c" line="50" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_q15.c" bodystart="50" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="group__FIR__Lattice_1ga8cd880ce0b660988f86fbeb479edafe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_fir_lattice_q31</definition>
        <argsstring>(const riscv_fir_lattice_instance_q31 *S, const q31_t *pSrc, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_fir_lattice_q31</name>
        <param>
          <type>const <ref refid="structriscv__fir__lattice__instance__q31" kindref="compound">riscv_fir_lattice_instance_q31</ref> *</type>
          <declname>S</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Processing function for the Q31 FIR lattice filter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">S</parametername>
</parameternamelist>
<parameterdescription>
<para>points to an instance of the Q31 FIR lattice structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of input data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the block of output data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples to process </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>In order to avoid overflows the input signal must be scaled down by 2*log2(numStages) bits. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_q31.c" line="53" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/FilteringFunctions/riscv_fir_lattice_q31.c" bodystart="53" bodyend="434"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This set of functions implements Finite Impulse Response (FIR) lattice filters for Q15, Q31 and floating-point data types. Lattice filters are used in a variety of adaptive filter applications. The filter structure is feedforward and the net impulse response is finite length. The functions operate on blocks of input and output data and each call to the function processes <computeroutput>blockSize</computeroutput> samples through the filter. <computeroutput>pSrc</computeroutput> and <computeroutput>pDst</computeroutput> point to input and output arrays containing <computeroutput>blockSize</computeroutput> values.</para><para><simplesect kind="par"><title>Algorithm</title><para><image type="html" name="FIRLattice.png">Finite Impulse Response Lattice filter</image>
 The following difference equation is implemented: </para></simplesect>
<simplesect kind="par"><title></title><para><preformatted>
    f0[n] = g0[n] = x[n]
    fm[n] = fm-1[n] + km * gm-1[n-1] for m = 1, 2, ...M
    gm[n] = km * fm-1[n] + gm-1[n-1] for m = 1, 2, ...M
    y[n] = fM[n]
</preformatted> </para></simplesect>
<simplesect kind="par"><title></title><para><computeroutput>pCoeffs</computeroutput> points to tha array of reflection coefficients of size <computeroutput>numStages</computeroutput>. Reflection Coefficients are stored in the following order. </para></simplesect>
<simplesect kind="par"><title></title><para><preformatted>
    {k1, k2, ..., kM}
</preformatted> where M is number of stages </para></simplesect>
<simplesect kind="par"><title></title><para><computeroutput>pState</computeroutput> points to a state array of size <computeroutput>numStages</computeroutput>. The state variables (g values) hold previous inputs and are stored in the following order. <preformatted>
  {g0[n], g1[n], g2[n] ...gM-1[n]}
</preformatted> The state variables are updated after each block of data is processed; the coefficients are untouched.</para></simplesect>
<simplesect kind="par"><title>Instance Structure</title><para>The coefficients and state variables for a filter are stored together in an instance data structure. A separate instance structure must be defined for each filter. Coefficient arrays may be shared among several instances while state variable arrays cannot be shared. There are separate instance structure declarations for each of the 3 supported data types.</para></simplesect>
<simplesect kind="par"><title>Initialization Functions</title><para>There is also an associated initialization function for each data type. The initialization function performs the following operations:<itemizedlist>
<listitem><para>Sets the values of the internal structure fields.</para></listitem><listitem><para>Zeros out the values in the state buffer. To do this manually without calling the init function, assign the follow subfields of the instance structure: numStages, pCoeffs, pState. Also set all of the values in pState to zero. </para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="par"><title></title><para>Use of the initialization function is optional. However, if the initialization function is used, then the instance structure cannot be placed into a const data section. To place an instance structure into a const data section, the instance structure must be manually initialized. Set the values in the state buffer to zeros and then manually initialize the instance structure as follows: <preformatted>
    <ref refid="structriscv__fir__lattice__instance__f32" kindref="compound">riscv_fir_lattice_instance_f32</ref> S = {numStages, pState, pCoeffs};
    <ref refid="structriscv__fir__lattice__instance__q31" kindref="compound">riscv_fir_lattice_instance_q31</ref> S = {numStages, pState, pCoeffs};
    <ref refid="structriscv__fir__lattice__instance__q15" kindref="compound">riscv_fir_lattice_instance_q15</ref> S = {numStages, pState, pCoeffs};
</preformatted> </para></simplesect>
<simplesect kind="par"><title></title><para>where <computeroutput>numStages</computeroutput> is the number of stages in the filter; <computeroutput>pState</computeroutput> is the address of the state buffer; <computeroutput>pCoeffs</computeroutput> is the address of the coefficient buffer.</para></simplesect>
<simplesect kind="par"><title>Fixed-Point Behavior</title><para>Care must be taken when using the fixed-point versions of the FIR Lattice filter functions. In particular, the overflow and saturation behavior of the accumulator used in each function must be considered. Refer to the function specific documentation below for usage guidelines. </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
