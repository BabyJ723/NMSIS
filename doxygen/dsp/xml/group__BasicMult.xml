<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__BasicMult" kind="group">
    <compoundname>BasicMult</compoundname>
    <title>Vector Multiplication</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__BasicMult_1gae63353652b163647d48e82dae770d751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_mult_f32</definition>
        <argsstring>(const float32_t *pSrcA, const float32_t *pSrcB, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_mult_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const float32_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Floating-point vector multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_mult_f32.c" line="62" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_mult_f32.c" bodystart="62" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicMult_1gacb33f56ed33bd4f1b09042defa89cef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_mult_q15</definition>
        <argsstring>(const q15_t *pSrcA, const q15_t *pSrcB, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_mult_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q15 vector multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The function uses saturating arithmetic. Results outside of the allowable Q15 range [0x8000 0x7FFF] are saturated. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_mult_q15.c" line="54" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_mult_q15.c" bodystart="54" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicMult_1ga6417e0441c17cf0bf524ba032cc89681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_mult_q31</definition>
        <argsstring>(const q31_t *pSrcA, const q31_t *pSrcB, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_mult_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const q31_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q31 vector multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The function uses saturating arithmetic. Results outside of the allowable Q31 range[0x80000000 0x7FFFFFFF] are saturated. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_mult_q31.c" line="54" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_mult_q31.c" bodystart="54" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicMult_1ga1845c38508f4157faa0fac3b104a0fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_mult_q7</definition>
        <argsstring>(const q7_t *pSrcA, const q7_t *pSrcB, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_mult_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>pSrcA</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>pSrcB</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Q7 vector multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrcA</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the first input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pSrcB</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the second input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The function uses saturating arithmetic. Results outside of the allowable Q7 range [0x80 0x7F] are saturated. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_mult_q7.c" line="54" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_mult_q7.c" bodystart="54" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Element-by-element multiplication of two vectors.</para><para><preformatted>
    pDst[n] = pSrcA[n] * pSrcB[n],   0 &lt;= n &lt; blockSize.
</preformatted></para><para>There are separate functions for floating-point, Q7, Q15, and Q31 data types. </para>    </detaileddescription>
  </compounddef>
</doxygen>
