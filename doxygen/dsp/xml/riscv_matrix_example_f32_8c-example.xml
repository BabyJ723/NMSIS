<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="riscv_matrix_example_f32_8c-example" kind="example">
    <compoundname>riscv_matrix_example_f32.c</compoundname>
    <detaileddescription>
<para><programlisting><codeline><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Copyright<sp/>(C)<sp/>2010-2012<sp/>ARM<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nuclei<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>$Date:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>17.<sp/>January<sp/>2013</highlight></codeline>
<codeline><highlight class="comment">*<sp/>$Revision:<sp/><sp/><sp/><sp/><sp/>V1.4.0</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Project:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NMSIS<sp/>DSP<sp/>Library</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Title:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>riscv_matrix_example_f32.c</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Description:<sp/><sp/><sp/>Example<sp/>code<sp/>demonstrating<sp/>least<sp/>square<sp/>fit<sp/>to<sp/>data</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>matrix<sp/>functions</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Target<sp/>Processor:<sp/>RISC-V<sp/>Cores</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline><highlight class="comment">*<sp/>are<sp/>met:</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>ARM<sp/>LIMITED<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline><highlight class="comment">*<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline><highlight class="comment">*<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline><highlight class="comment">*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline><highlight class="comment">*<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline><highlight class="comment">*<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline><highlight class="comment">*<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline><highlight class="comment">*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline><highlight class="comment">*<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline><highlight class="comment">*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline><highlight class="comment">*<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline><highlight class="comment">*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="preprocessor">#include<sp/>&quot;riscv_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math_helper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SNR_THRESHOLD<sp/><sp/><sp/>90</highlight></codeline>
<codeline><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Test<sp/>input<sp/>data(Cycles)<sp/>taken<sp/>from<sp/>FIR<sp/>Q15<sp/>module<sp/>for<sp/>differant<sp/>cases<sp/>of<sp/>blockSize</highlight></codeline>
<codeline><highlight class="comment">*<sp/>and<sp/>tapSize</highlight></codeline>
<codeline><highlight class="comment">*<sp/>---------------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>B_f32[4]<sp/>=</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>782.0,<sp/>7577.0,<sp/>470.0,<sp/>4505.0</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Formula<sp/>to<sp/>fit<sp/>is<sp/><sp/>C1<sp/>+<sp/>C2<sp/>*<sp/>numTaps<sp/>+<sp/>C3<sp/>*<sp/>blockSize<sp/>+<sp/>C4<sp/>*<sp/>numTaps<sp/>*<sp/>blockSize</highlight></codeline>
<codeline><highlight class="comment">*<sp/>--------------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>A_f32[16]<sp/>=</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Const,<sp/><sp/><sp/>numTaps,<sp/><sp/><sp/>blockSize,<sp/><sp/><sp/>numTaps*blockSize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>1.0,<sp/><sp/><sp/><sp/><sp/>32.0,<sp/><sp/><sp/><sp/><sp/><sp/>4.0,<sp/><sp/><sp/><sp/><sp/>128.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>1.0,<sp/><sp/><sp/><sp/><sp/>32.0,<sp/><sp/><sp/><sp/><sp/>64.0,<sp/><sp/><sp/><sp/>2048.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>1.0,<sp/><sp/><sp/><sp/><sp/>16.0,<sp/><sp/><sp/><sp/><sp/><sp/>4.0,<sp/><sp/><sp/><sp/><sp/><sp/>64.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>1.0,<sp/><sp/><sp/><sp/><sp/>16.0,<sp/><sp/><sp/><sp/><sp/>64.0,<sp/><sp/><sp/><sp/>1024.0,</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Temporary<sp/>buffers<sp/><sp/>for<sp/>storing<sp/>intermediate<sp/>values</highlight></codeline>
<codeline><highlight class="comment">*<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Transpose<sp/>of<sp/>A<sp/>Buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>AT_f32[16];</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>(Transpose<sp/>of<sp/>A<sp/>*<sp/>A)<sp/>Buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>ATMA_f32[16];</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Inverse(Transpose<sp/>of<sp/>A<sp/>*<sp/>A)<sp/><sp/>Buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>ATMAI_f32[16];</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Test<sp/>Output<sp/>Buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>X_f32[4];</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Reference<sp/>ouput<sp/>buffer<sp/>C1,<sp/>C2,<sp/>C3<sp/>and<sp/>C4<sp/>taken<sp/>from<sp/>MATLAB</highlight></codeline>
<codeline><highlight class="comment">*<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>float32_t<sp/>xRef_f32[4]<sp/>=<sp/>{73.0,<sp/>8.0,<sp/>21.25,<sp/>2.875};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>snr;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Max<sp/>magnitude<sp/>FFT<sp/>Bin<sp/>test</highlight></codeline>
<codeline><highlight class="comment">*<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>main(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="structriscv__matrix__instance__f32" kindref="compound">riscv_matrix_instance_f32</ref><sp/>A;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Matrix<sp/>A<sp/>Instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="structriscv__matrix__instance__f32" kindref="compound">riscv_matrix_instance_f32</ref><sp/>AT;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Matrix<sp/>AT(A<sp/>transpose)<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="structriscv__matrix__instance__f32" kindref="compound">riscv_matrix_instance_f32</ref><sp/>ATMA;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Matrix<sp/>ATMA(<sp/>AT<sp/>multiply<sp/>with<sp/>A)<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="structriscv__matrix__instance__f32" kindref="compound">riscv_matrix_instance_f32</ref><sp/>ATMAI;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Matrix<sp/>ATMAI(Inverse<sp/>of<sp/>ATMA)<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="structriscv__matrix__instance__f32" kindref="compound">riscv_matrix_instance_f32</ref><sp/>B;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Matrix<sp/>B<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="structriscv__matrix__instance__f32" kindref="compound">riscv_matrix_instance_f32</ref><sp/>X;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Matrix<sp/>X(Unknown<sp/>Matrix)<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>uint32_t<sp/>srcRows,<sp/>srcColumns;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>riscv_status<sp/>status;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>A<sp/>Matrix<sp/>Instance<sp/>with<sp/>numRows,<sp/>numCols<sp/>and<sp/>data<sp/>array(A_f32)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcRows<sp/>=<sp/>4;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcColumns<sp/>=<sp/>4;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__MatrixInit_1gadd1996f7da2fd9f19a6e2f3e691b681f" kindref="member">riscv_mat_init_f32</ref>(&amp;A,<sp/>srcRows,<sp/>srcColumns,<sp/>(float32_t<sp/>*)A_f32);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>Matrix<sp/>Instance<sp/>AT<sp/>with<sp/>numRows,<sp/>numCols<sp/>and<sp/>data<sp/>array(AT_f32)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcRows<sp/>=<sp/>4;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcColumns<sp/>=<sp/>4;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__MatrixInit_1gadd1996f7da2fd9f19a6e2f3e691b681f" kindref="member">riscv_mat_init_f32</ref>(&amp;AT,<sp/>srcRows,<sp/>srcColumns,<sp/>AT_f32);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculation<sp/>of<sp/>A<sp/>transpose<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="group__MatrixTrans_1gae9c3388323897b322f6bd136d52f0a64" kindref="member">riscv_mat_trans_f32</ref>(&amp;A,<sp/>&amp;AT);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>ATMA<sp/>Matrix<sp/>Instance<sp/>with<sp/>numRows,<sp/>numCols<sp/>and<sp/>data<sp/>array(ATMA_f32)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcRows<sp/>=<sp/>4;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcColumns<sp/>=<sp/>4;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__MatrixInit_1gadd1996f7da2fd9f19a6e2f3e691b681f" kindref="member">riscv_mat_init_f32</ref>(&amp;ATMA,<sp/>srcRows,<sp/>srcColumns,<sp/>ATMA_f32);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculation<sp/>of<sp/>AT<sp/>Multiply<sp/>with<sp/>A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="group__MatrixMult_1ga0f1c7b30e1c552617b8bb6a6898e57d4" kindref="member">riscv_mat_mult_f32</ref>(&amp;AT,<sp/>&amp;A,<sp/>&amp;ATMA);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>ATMAI<sp/>Matrix<sp/>Instance<sp/>with<sp/>numRows,<sp/>numCols<sp/>and<sp/>data<sp/>array(ATMAI_f32)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcRows<sp/>=<sp/>4;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcColumns<sp/>=<sp/>4;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__MatrixInit_1gadd1996f7da2fd9f19a6e2f3e691b681f" kindref="member">riscv_mat_init_f32</ref>(&amp;ATMAI,<sp/>srcRows,<sp/>srcColumns,<sp/>ATMAI_f32);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculation<sp/>of<sp/>Inverse((Transpose(A)<sp/>*<sp/>A)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="group__MatrixInv_1gafe1cdc037cf164c23ae8f5d0e4e5582b" kindref="member">riscv_mat_inverse_f32</ref>(&amp;ATMA,<sp/>&amp;ATMAI);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculation<sp/>of<sp/>(Inverse((Transpose(A)<sp/>*<sp/>A))<sp/>*<sp/><sp/>Transpose(A))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="group__MatrixMult_1ga0f1c7b30e1c552617b8bb6a6898e57d4" kindref="member">riscv_mat_mult_f32</ref>(&amp;ATMAI,<sp/>&amp;AT,<sp/>&amp;ATMA);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>B<sp/>Matrix<sp/>Instance<sp/>with<sp/>numRows,<sp/>numCols<sp/>and<sp/>data<sp/>array(B_f32)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcRows<sp/>=<sp/>4;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcColumns<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__MatrixInit_1gadd1996f7da2fd9f19a6e2f3e691b681f" kindref="member">riscv_mat_init_f32</ref>(&amp;B,<sp/>srcRows,<sp/>srcColumns,<sp/>(float32_t<sp/>*)B_f32);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialise<sp/>X<sp/>Matrix<sp/>Instance<sp/>with<sp/>numRows,<sp/>numCols<sp/>and<sp/>data<sp/>array(X_f32)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcRows<sp/>=<sp/>4;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>srcColumns<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__MatrixInit_1gadd1996f7da2fd9f19a6e2f3e691b681f" kindref="member">riscv_mat_init_f32</ref>(&amp;X,<sp/>srcRows,<sp/>srcColumns,<sp/>X_f32);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculation<sp/>((Inverse((Transpose(A)<sp/>*<sp/>A))<sp/>*<sp/><sp/>Transpose(A))<sp/>*<sp/>B)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="group__MatrixMult_1ga0f1c7b30e1c552617b8bb6a6898e57d4" kindref="member">riscv_mat_mult_f32</ref>(&amp;ATMA,<sp/>&amp;B,<sp/>&amp;X);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Comparison<sp/>of<sp/>reference<sp/>with<sp/>test<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>snr<sp/>=<sp/>riscv_snr_f32((float32_t<sp/>*)xRef_f32,<sp/>X_f32,<sp/>4);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*------------------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialise<sp/>status<sp/>depending<sp/>on<sp/>SNR<sp/>calculations</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/>*------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>snr<sp/>&gt;<sp/>SNR_THRESHOLD)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>RISCV_MATH_SUCCESS;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;passed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>RISCV_MATH_TEST_FAILURE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
