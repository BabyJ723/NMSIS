<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__GEQ5Band" kind="group">
    <compoundname>GEQ5Band</compoundname>
    <title>Graphic Audio Equalizer Example</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Description:</title><para></para></simplesect>
<simplesect kind="par"><title></title><para>This example demonstrates how a 5-band graphic equalizer can be constructed using the Biquad cascade functions. A graphic equalizer is used in audio applications to vary the tonal quality of the audio.</para></simplesect>
<simplesect kind="par"><title>Block Diagram:</title><para></para></simplesect>
<simplesect kind="par"><title></title><para>The design is based on a cascade of 5 filter sections. <image type="html" name="GEQ_signalflow.png"></image>
 Each filter section is 4th order and consists of a cascade of two Biquads. Each filter has a nominal gain of 0 dB (1.0 in linear units) and boosts or cuts signals within a specific frequency range. The edge frequencies between the 5 bands are 100, 500, 2000, and 6000 Hz. Each band has an adjustable boost or cut in the range of +/- 9 dB. For example, the band that extends from 500 to 2000 Hz has the response shown below: </para></simplesect>
<simplesect kind="par"><title></title><para><image type="html" name="GEQ_bandresponse.png"></image>
 </para></simplesect>
<simplesect kind="par"><title></title><para>With 1 dB steps, each filter has a total of 19 different settings. The filter coefficients for all possible 19 settings were precomputed in MATLAB and stored in a table. With 5 different tables, there are a total of 5 x 19 = 95 different 4th order filters. All 95 responses are shown below: </para></simplesect>
<simplesect kind="par"><title></title><para><image type="html" name="GEQ_allbandresponse.png"></image>
 </para></simplesect>
<simplesect kind="par"><title></title><para>Each 4th order filter has 10 coefficents for a grand total of 950 different filter coefficients that must be tabulated. The input and output data is in Q31 format. For better noise performance, the two low frequency bands are implemented using the high precision 32x64-bit Biquad filters. The remaining 3 high frequency bands use standard 32x32-bit Biquad filters. The input signal used in the example is a logarithmic chirp. </para></simplesect>
<simplesect kind="par"><title></title><para><image type="html" name="GEQ_inputchirp.png"></image>
 </para></simplesect>
<simplesect kind="par"><title></title><para>The array <computeroutput>bandGains</computeroutput> specifies the gain in dB to apply in each band. For example, if <computeroutput>bandGains={0, -3, 6, 4, -6};</computeroutput> then the output signal will be: </para></simplesect>
<simplesect kind="par"><title></title><para><image type="html" name="GEQ_outputchirp.png"></image>
 </para></simplesect>
<simplesect kind="par"><title></title><para></para></simplesect>
<simplesect kind="note"><para>The output chirp signal follows the gain or boost of each band. </para></simplesect>
<simplesect kind="par"><title></title><para></para></simplesect>
<simplesect kind="par"><title>Variables Description:</title><para></para></simplesect>
<simplesect kind="par"><title></title><para><itemizedlist>
<listitem><para><computeroutput>testInput_f32</computeroutput> points to the input data </para></listitem>
<listitem><para><computeroutput>testRefOutput_f32</computeroutput> points to the reference output data </para></listitem>
<listitem><para><computeroutput>testOutput</computeroutput> points to the test output data </para></listitem>
<listitem><para><computeroutput>inputQ31</computeroutput> temporary input buffer </para></listitem>
<listitem><para><computeroutput>outputQ31</computeroutput> temporary output buffer </para></listitem>
<listitem><para><computeroutput>biquadStateBand1Q31</computeroutput> points to state buffer for band1 </para></listitem>
<listitem><para><computeroutput>biquadStateBand2Q31</computeroutput> points to state buffer for band2 </para></listitem>
<listitem><para><computeroutput>biquadStateBand3Q31</computeroutput> points to state buffer for band3 </para></listitem>
<listitem><para><computeroutput>biquadStateBand4Q31</computeroutput> points to state buffer for band4 </para></listitem>
<listitem><para><computeroutput>biquadStateBand5Q31</computeroutput> points to state buffer for band5 </para></listitem>
<listitem><para><computeroutput>coeffTable</computeroutput> points to coefficient buffer for all bands </para></listitem>
<listitem><para><computeroutput>gainDB</computeroutput> gain buffer which has gains applied for all the bands</para></listitem>
</itemizedlist>
</para></simplesect>
<simplesect kind="par"><title>NMSIS DSP Software Library Functions Used:</title><para></para></simplesect>
<simplesect kind="par"><title></title><para><itemizedlist>
<listitem><para><ref refid="group__BiquadCascadeDF1__32x64_1ga072fc75723bc392c567554410e99bdb2" kindref="member">riscv_biquad_cas_df1_32x64_init_q31()</ref></para></listitem><listitem><para><ref refid="group__BiquadCascadeDF1__32x64_1gacdf7b9d2877e249a4bc4bf40a7dc0b06" kindref="member">riscv_biquad_cas_df1_32x64_q31()</ref></para></listitem><listitem><para><ref refid="group__BiquadCascadeDF1_1gae8abff148e8233c48bdd9dda2caeaad5" kindref="member">riscv_biquad_cascade_df1_init_q31()</ref></para></listitem><listitem><para><ref refid="group__BiquadCascadeDF1_1ga9db8b6490e760bcbb86366385ffd7a5b" kindref="member">riscv_biquad_cascade_df1_q31()</ref></para></listitem><listitem><para><ref refid="group__BasicScale_1gae8dab424d4d97e475a3d14336d177a6a" kindref="member">riscv_scale_q31()</ref></para></listitem><listitem><para><ref refid="group__BasicScale_1ga7ca2deeac250c6fb6c6bb2796bc15ba6" kindref="member">riscv_scale_f32()</ref></para></listitem><listitem><para><ref refid="group__float__to__x_1ga41b2ddb89a3c532d418b9626c19b0c55" kindref="member">riscv_float_to_q31()</ref></para></listitem><listitem><para><ref refid="group__q31__to__x_1ga6cfd64ce23c32128018543b24b7c8315" kindref="member">riscv_q31_to_float()</ref></para></listitem></itemizedlist>
</para></simplesect>
<bold> Refer </bold> <ref refid="riscv_graphic_equalizer_example_q31_8c-example" kindref="compound">riscv_graphic_equalizer_example_q31.c</ref> </para>    </detaileddescription>
  </compounddef>
</doxygen>
