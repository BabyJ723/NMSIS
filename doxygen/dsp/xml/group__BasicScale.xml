<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__BasicScale" kind="group">
    <compoundname>BasicScale</compoundname>
    <title>Vector Scale</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__BasicScale_1ga7ca2deeac250c6fb6c6bb2796bc15ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_scale_f32</definition>
        <argsstring>(const float32_t *pSrc, float32_t scale, float32_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_scale_f32</name>
        <param>
          <type>const float32_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>float32_t</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>float32_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Multiplies a floating-point vector by a scalar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scale factor to be applied </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_scale_f32.c" line="77" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_scale_f32.c" bodystart="77" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicScale_1gaf690da22beaf9f35c55e057bcbd46ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_scale_q15</definition>
        <argsstring>(const q15_t *pSrc, q15_t scaleFract, int8_t shift, q15_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_scale_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>q15_t</type>
          <declname>scaleFract</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Multiplies a Q15 vector by a scalar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scaleFract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional portion of the scale value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift the result by </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The input data <computeroutput>*pSrc</computeroutput> and <computeroutput>scaleFract</computeroutput> are in 1.15 format. These are multiplied to yield a 2.30 intermediate result and this is shifted with saturation to 1.15 format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_scale_q15.c" line="55" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_scale_q15.c" bodystart="55" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicScale_1gae8dab424d4d97e475a3d14336d177a6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_scale_q31</definition>
        <argsstring>(const q31_t *pSrc, q31_t scaleFract, int8_t shift, q31_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_scale_q31</name>
        <param>
          <type>const q31_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>q31_t</type>
          <declname>scaleFract</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q31_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Multiplies a Q31 vector by a scalar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scaleFract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional portion of the scale value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift the result by </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The input data <computeroutput>*pSrc</computeroutput> and <computeroutput>scaleFract</computeroutput> are in 1.31 format. These are multiplied to yield a 2.62 intermediate result and this is shifted with saturation to 1.31 format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_scale_q31.c" line="55" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_scale_q31.c" bodystart="55" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="group__BasicScale_1ga41758c89febae083e09638194f0a9aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void riscv_scale_q7</definition>
        <argsstring>(const q7_t *pSrc, q7_t scaleFract, int8_t shift, q7_t *pDst, uint32_t blockSize)</argsstring>
        <name>riscv_scale_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>pSrc</declname>
        </param>
        <param>
          <type>q7_t</type>
          <declname>scaleFract</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>shift</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>pDst</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
<para>Multiplies a Q7 vector by a scalar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pSrc</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">scaleFract</parametername>
</parameternamelist>
<parameterdescription>
<para>fractional portion of the scale value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">shift</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to shift the result by </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pDst</parametername>
</parameternamelist>
<parameterdescription>
<para>points to the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>number of samples in each vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>none</para></simplesect>
<simplesect kind="par"><title>Scaling and Overflow Behavior</title><para>The input data <computeroutput>*pSrc</computeroutput> and <computeroutput>scaleFract</computeroutput> are in 1.7 format. These are multiplied to yield a 2.14 intermediate result and this is shifted with saturation to 1.7 format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_scale_q7.c" line="55" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/DSP/Source/BasicMathFunctions/riscv_scale_q7.c" bodystart="55" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Multiply a vector by a scalar value. For floating-point data, the algorithm used is:</para><para><preformatted>
    pDst[n] = pSrc[n] * scale,   0 &lt;= n &lt; blockSize.
</preformatted></para><para>In the fixed-point Q7, Q15, and Q31 functions, <computeroutput>scale</computeroutput> is represented by a fractional multiplication <computeroutput>scaleFract</computeroutput> and an arithmetic shift <computeroutput>shift</computeroutput>. The shift allows the gain of the scaling operation to exceed 1.0. The algorithm used with fixed-point data is:</para><para><preformatted>
    pDst[n] = (pSrc[n] * scaleFract) &lt;&lt; shift,   0 &lt;= n &lt; blockSize.
</preformatted></para><para>The overall scale factor applied to the fixed-point data is <preformatted>
    scale = scaleFract * 2^shift.
</preformatted></para><para>The functions support in-place computation allowing the source and destination pointers to reference the same memory buffer. </para>    </detaileddescription>
  </compounddef>
</doxygen>
