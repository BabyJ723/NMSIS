<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="riscv_dotproduct_example_f32_8c-example" kind="example">
    <compoundname>riscv_dotproduct_example_f32.c</compoundname>
    <detaileddescription>
<para><programlisting><codeline><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Copyright<sp/>(C)<sp/>2010-2012<sp/>ARM<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nuclei<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>$Date:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>17.<sp/>January<sp/>2013</highlight></codeline>
<codeline><highlight class="comment">*<sp/>$Revision:<sp/><sp/><sp/><sp/><sp/>V1.4.0</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Project:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NMSIS<sp/>DSP<sp/>Library</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Title:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>riscv_dotproduct_example_f32.c</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Description:<sp/><sp/><sp/>Example<sp/>code<sp/>computing<sp/>dot<sp/>product<sp/>of<sp/>two<sp/>vectors.</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Target<sp/>Processor:<sp/>RISC-V<sp/>Cores</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline><highlight class="comment">*<sp/>are<sp/>met:</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/>-<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>ARM<sp/>LIMITED<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this</highlight></codeline>
<codeline><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline><highlight class="comment">*</highlight></codeline>
<codeline><highlight class="comment">*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline><highlight class="comment">*<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline><highlight class="comment">*<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline><highlight class="comment">*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline><highlight class="comment">*<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline><highlight class="comment">*<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline><highlight class="comment">*<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline><highlight class="comment">*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER</highlight></codeline>
<codeline><highlight class="comment">*<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline><highlight class="comment">*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline><highlight class="comment">*<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline><highlight class="comment">*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;riscv_math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Defines<sp/>each<sp/>of<sp/>the<sp/>tests<sp/>performed</highlight></codeline>
<codeline><highlight class="comment">*<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_BLOCKSIZE<sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DELTA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0.000001f)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Test<sp/>input<sp/>data<sp/>for<sp/>Floating<sp/>point<sp/>Dot<sp/>Product<sp/>example<sp/>for<sp/>32-blockSize</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Generated<sp/>by<sp/>the<sp/>MATLAB<sp/>randn()<sp/>function</highlight></codeline>
<codeline><highlight class="comment">*<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">**<sp/>Test<sp/>input<sp/>data<sp/>of<sp/>srcA<sp/>for<sp/>blockSize<sp/>32</highlight></codeline>
<codeline><highlight class="comment">**<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>srcA_buf_f32[MAX_BLOCKSIZE]<sp/>=</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.4325648115282207,<sp/><sp/>-1.6655843782380970,<sp/><sp/>0.1253323064748307,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>0.2876764203585489,<sp/><sp/>-1.1464713506814637,<sp/><sp/>1.1909154656429988,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>1.1891642016521031,<sp/><sp/>-0.0376332765933176,<sp/><sp/>0.3272923614086541,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>0.1746391428209245,<sp/><sp/>-0.1867085776814394,<sp/><sp/>0.7257905482933027,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.5883165430141887,<sp/><sp/><sp/>2.1831858181971011,<sp/>-0.1363958830865957,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>0.1139313135208096,<sp/><sp/><sp/>1.0667682113591888,<sp/><sp/>0.0592814605236053,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.0956484054836690,<sp/><sp/>-0.8323494636500225,<sp/><sp/>0.2944108163926404,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-1.3361818579378040,<sp/><sp/><sp/>0.7143245518189522,<sp/><sp/>1.6235620644462707,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.6917757017022868,<sp/><sp/><sp/>0.8579966728282626,<sp/><sp/>1.2540014216025324,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-1.5937295764474768,<sp/><sp/>-1.4409644319010200,<sp/><sp/>0.5711476236581780,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.3998855777153632,<sp/><sp/><sp/>0.6899973754643451</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">**<sp/>Test<sp/>input<sp/>data<sp/>of<sp/>srcB<sp/>for<sp/>blockSize<sp/>32</highlight></codeline>
<codeline><highlight class="comment">**<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>srcB_buf_f32[MAX_BLOCKSIZE]<sp/>=</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>1.7491401329284098,<sp/><sp/>0.1325982188803279,<sp/><sp/><sp/>0.3252281811989881,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.7938091410349637,<sp/><sp/>0.3149236145048914,<sp/><sp/>-0.5272704888029532,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>0.9322666565031119,<sp/><sp/>1.1646643544607362,<sp/><sp/>-2.0456694357357357,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.6443728590041911,<sp/><sp/>1.7410657940825480,<sp/><sp/><sp/>0.4867684246821860,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>1.0488288293660140,<sp/><sp/>1.4885752747099299,<sp/><sp/><sp/>1.2705014969484090,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-1.8561241921210170,<sp/><sp/>2.1343209047321410,<sp/><sp/><sp/>1.4358467535865909,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.9173023332875400,<sp/>-1.1060770780029008,<sp/><sp/><sp/>0.8105708062681296,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>0.6985430696369063,<sp/>-0.4015827425012831,<sp/><sp/><sp/>1.2687512030669628,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-0.7836083053674872,<sp/><sp/>0.2132664971465569,<sp/><sp/><sp/>0.7878984786088954,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>0.8966819356782295,<sp/>-0.1869172943544062,<sp/><sp/><sp/>1.0131816724341454,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>0.2484350696132857,<sp/><sp/>0.0596083377937976</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reference<sp/>dot<sp/>product<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/><sp/>refDotProdOut<sp/>=<sp/>5.9273644806352142;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------------------------------------------------</highlight></codeline>
<codeline><highlight class="comment">*<sp/>Declare<sp/>Global<sp/>variables</highlight></codeline>
<codeline><highlight class="comment">*<sp/>-------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>multOutput[MAX_BLOCKSIZE];<sp/><sp/></highlight><highlight class="comment">/*<sp/>Intermediate<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">float32_t<sp/>testOutput;<sp/><sp/></highlight><highlight class="comment">/*<sp/>Final<sp/>ouput<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">riscv_status<sp/>status;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Status<sp/>of<sp/>the<sp/>example<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">int32_t<sp/>main(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>uint32_t<sp/>i;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Loop<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>float32_t<sp/>diff;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Difference<sp/>between<sp/>reference<sp/>and<sp/>test<sp/>outputs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Multiplication<sp/>of<sp/>two<sp/>input<sp/>buffers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="group__BasicMult_1gae63353652b163647d48e82dae770d751" kindref="member">riscv_mult_f32</ref>(srcA_buf_f32,<sp/>srcB_buf_f32,<sp/>multOutput,<sp/>MAX_BLOCKSIZE);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Accumulate<sp/>the<sp/>multiplication<sp/>output<sp/>values<sp/>to</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>get<sp/>the<sp/>dot<sp/>product<sp/>of<sp/>the<sp/>two<sp/>inputs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<sp/>MAX_BLOCKSIZE;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__BasicAdd_1ga11b757065b1c8aa1cef4a59594e4ecf0" kindref="member">riscv_add_f32</ref>(&amp;testOutput,<sp/>&amp;multOutput[i],<sp/>&amp;testOutput,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>absolute<sp/>value<sp/>of<sp/>difference<sp/>between<sp/>ref<sp/>and<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>diff<sp/>=<sp/>fabsf(refDotProdOut<sp/>-<sp/>testOutput);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Comparison<sp/>of<sp/>dot<sp/>product<sp/>value<sp/>with<sp/>reference<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>&gt;<sp/>DELTA)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>RISCV_MATH_TEST_FAILURE;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>RISCV_MATH_TEST_FAILURE)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;passed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
</programlisting> </para>    </detaileddescription>
  </compounddef>
</doxygen>
