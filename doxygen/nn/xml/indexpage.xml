<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>NMSIS NN Software Library</title>
    <detaileddescription>
<para><heading level="2">Introduction </heading>
</para><para>This user manual describes the NMSIS NN software library, a collection of efficient neural network kernels developed to maximize the performance and minimize the memory footprint of neural networks on Nuclei N processor cores.</para><para>The library is divided into a number of functions each covering a specific category:<itemizedlist>
<listitem><para>Neural Network Convolution Functions</para></listitem><listitem><para>Neural Network Activation Functions</para></listitem><listitem><para>Fully-connected Layer Functions</para></listitem><listitem><para>Neural Network Pooling Functions</para></listitem><listitem><para>Softmax Functions</para></listitem><listitem><para>Neural Network Support Functions</para></listitem></itemizedlist>
</para><para>The library has separate functions for operating on different weight and activation data types including 8-bit integers (q7_t) and 16-bit integers (q15_t). The descrition of the kernels are included in the function description. The implementation details are also described in this paper [1].</para><para><simplesect kind="note"><para>Please refer to <ulink url="../../../html/nn/index.html">NMSIS-NN</ulink></para></simplesect>
<heading level="2">Block Diagram </heading>
</para><para><image type="html" name="NMSIS-NN-OVERVIEW.PNG"></image>
</para><para><heading level="2">Examples </heading>
</para><para>The library ships with a number of examples which demonstrate how to use the library functions.</para><para><heading level="2">Pre-processor Macros </heading>
</para><para>Each library project have differant pre-processor macros.</para><para><itemizedlist>
<listitem><para>RISCV_MATH_DSP:</para></listitem></itemizedlist>
</para><para>Define macro RISCV_MATH_DSP, If the silicon supports DSP instructions.</para><para><itemizedlist>
<listitem><para>RISCV_NN_TRUNCATE:</para></listitem></itemizedlist>
</para><para>Define macro RISCV_NN_TRUNCATE to use floor instead of round-to-the-nearest-int for the computation.</para><para>[1] CMSIS-NN: Efficient Neural Network Kernels for Arm Cortex-M CPUs <ulink url="https://arxiv.org/abs/1801.06601">https://arxiv.org/abs/1801.06601</ulink> </para>    </detaileddescription>
  </compounddef>
</doxygen>
