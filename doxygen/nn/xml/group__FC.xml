<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__FC" kind="group">
    <compoundname>FC</compoundname>
    <title>Fully-connected Layer Functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__FC_1gae53e7bbdcd7730c409d71d08c446d666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>riscv_status</type>
        <definition>riscv_status riscv_fully_connected_mat_q7_vec_q15</definition>
        <argsstring>(const q15_t *pV, const q7_t *pM, const uint16_t dim_vec, const uint16_t num_of_rows, const uint16_t bias_shift, const uint16_t out_shift, const q7_t *bias, q15_t *pOut, q15_t *vec_buffer)</argsstring>
        <name>riscv_fully_connected_mat_q7_vec_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>pV</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>pM</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dim_vec</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>num_of_rows</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_shift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>vec_buffer</declname>
        </param>
        <briefdescription>
<para>Mixed Q15-Q7 fully-connected layer function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pV</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pM</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to matrix weights </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dim_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_of_rows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in weight matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of left-shift for bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of right-shift for output </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">vec_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer space for input </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns <computeroutput>RISCV_MATH_SUCCESS</computeroutput></para></simplesect>
<bold>Buffer size:</bold></para><para>vec_buffer size: 0</para><para>Q7_Q15 version of the fully connected layer</para><para>Weights are in q7_t and Activations are in q15_t </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_mat_q7_vec_q15.c" line="70" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_mat_q7_vec_q15.c" bodystart="70" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="group__FC_1ga73d8955ae16c57e5fe30de697459daed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>riscv_status</type>
        <definition>riscv_status riscv_fully_connected_mat_q7_vec_q15_opt</definition>
        <argsstring>(const q15_t *pV, const q7_t *pM, const uint16_t dim_vec, const uint16_t num_of_rows, const uint16_t bias_shift, const uint16_t out_shift, const q7_t *bias, q15_t *pOut, q15_t *vec_buffer)</argsstring>
        <name>riscv_fully_connected_mat_q7_vec_q15_opt</name>
        <param>
          <type>const q15_t *</type>
          <declname>pV</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>pM</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dim_vec</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>num_of_rows</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_shift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>vec_buffer</declname>
        </param>
        <briefdescription>
<para>Mixed Q15-Q7 opt fully-connected layer function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pV</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pM</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to matrix weights </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dim_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_of_rows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in weight matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of left-shift for bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of right-shift for output </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">vec_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer space for input </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns <computeroutput>RISCV_MATH_SUCCESS</computeroutput></para></simplesect>
<bold>Buffer size:</bold></para><para>vec_buffer size: 0</para><para>Q7_Q15 version of the fully connected layer</para><para>Weights are in q7_t and Activations are in q15_t</para><para>Limitation: x4 version requires weight reordering to work</para><para>Here we use only one pointer to read 4 rows in the weight matrix. So if the original q7_t matrix looks like this:</para><para>| a11 | a12 | a13 | a14 | a15 | a16 | a17 |</para><para>| a21 | a22 | a23 | a24 | a25 | a26 | a27 |</para><para>| a31 | a32 | a33 | a34 | a35 | a36 | a37 |</para><para>| a41 | a42 | a43 | a44 | a45 | a46 | a47 |</para><para>| a51 | a52 | a53 | a54 | a55 | a56 | a57 |</para><para>| a61 | a62 | a63 | a64 | a65 | a66 | a67 |</para><para>We operates on multiple-of-4 rows, so the first four rows becomes</para><para>| a11 | a21 | a12 | a22 | a31 | a41 | a32 | a42 |</para><para>| a13 | a23 | a14 | a24 | a33 | a43 | a34 | a44 |</para><para>| a15 | a25 | a16 | a26 | a35 | a45 | a36 | a46 |</para><para>The column left over will be in-order. which is: | a17 | a27 | a37 | a47 |</para><para>For the left-over rows, we do 1x1 computation, so the data remains as its original order.</para><para>So the stored weight matrix looks like this:</para><para>| a11 | a21 | a12 | a22 | a31 | a41 |</para><para>| a32 | a42 | a13 | a23 | a14 | a24 |</para><para>| a33 | a43 | a34 | a44 | a15 | a25 |</para><para>| a16 | a26 | a35 | a45 | a36 | a46 |</para><para>| a17 | a27 | a37 | a47 | a51 | a52 |</para><para>| a53 | a54 | a55 | a56 | a57 | a61 |</para><para>| a62 | a63 | a64 | a65 | a66 | a67 | </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_mat_q7_vec_q15_opt.c" line="118" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_mat_q7_vec_q15_opt.c" bodystart="118" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="group__FC_1gab7871cb369396fba31f5e7037b163b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>riscv_status</type>
        <definition>riscv_status riscv_fully_connected_q15</definition>
        <argsstring>(const q15_t *pV, const q15_t *pM, const uint16_t dim_vec, const uint16_t num_of_rows, const uint16_t bias_shift, const uint16_t out_shift, const q15_t *bias, q15_t *pOut, q15_t *vec_buffer)</argsstring>
        <name>riscv_fully_connected_q15</name>
        <param>
          <type>const q15_t *</type>
          <declname>pV</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>pM</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dim_vec</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>num_of_rows</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_shift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>vec_buffer</declname>
        </param>
        <briefdescription>
<para>Q15 opt fully-connected layer function. </para>        </briefdescription>
        <detaileddescription>
<para>Q15 basic fully-connected layer function.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pV</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pM</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to matrix weights </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dim_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_of_rows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in weight matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of left-shift for bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of right-shift for output </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">vec_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer space for input </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns <computeroutput>RISCV_MATH_SUCCESS</computeroutput></para></simplesect>
<bold>Buffer size:</bold></para><para>vec_buffer size: 0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q15.c" line="67" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q15.c" bodystart="67" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="group__FC_1ga7aac789b484f40bcea3ca6511f2969d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>riscv_status</type>
        <definition>riscv_status riscv_fully_connected_q15_opt</definition>
        <argsstring>(const q15_t *pV, const q15_t *pM, const uint16_t dim_vec, const uint16_t num_of_rows, const uint16_t bias_shift, const uint16_t out_shift, const q15_t *bias, q15_t *pOut, q15_t *vec_buffer)</argsstring>
        <name>riscv_fully_connected_q15_opt</name>
        <param>
          <type>const q15_t *</type>
          <declname>pV</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>pM</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dim_vec</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>num_of_rows</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_shift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const q15_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>vec_buffer</declname>
        </param>
        <briefdescription>
<para>Q15 opt fully-connected layer function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pV</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pM</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to matrix weights </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dim_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_of_rows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in weight matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of left-shift for bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of right-shift for output </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">vec_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer space for input </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns <computeroutput>RISCV_MATH_SUCCESS</computeroutput></para></simplesect>
<bold>Buffer size:</bold></para><para>vec_buffer size: 0</para><para>Here we use only one pointer to read 4 rows in the weight matrix. So if the original matrix looks like this:</para><para>| a11 | a12 | a13 |</para><para>| a21 | a22 | a23 |</para><para>| a31 | a32 | a33 |</para><para>| a41 | a42 | a43 |</para><para>| a51 | a52 | a53 |</para><para>| a61 | a62 | a63 |</para><para>We operates on multiple-of-4 rows, so the first four rows becomes</para><para>| a11 | a12 | a21 | a22 | a31 | a32 | a41 | a42 |</para><para>| a13 | a23 | a33 | a43 |</para><para>Remaining rows are kept the same original order.</para><para>So the stored weight matrix looks like this:</para><para>| a11 | a12 | a21 | a22 | a31 | a32 | a41 | a42 |</para><para>| a13 | a23 | a33 | a43 | a51 | a52 | a53 | a61 |</para><para>| a62 | a63 | </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q15_opt.c" line="98" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q15_opt.c" bodystart="98" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="group__FC_1gaabd0ddb08f10926a0cb16c780f1f1092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>riscv_status</type>
        <definition>riscv_status riscv_fully_connected_q7</definition>
        <argsstring>(const q7_t *pV, const q7_t *pM, const uint16_t dim_vec, const uint16_t num_of_rows, const uint16_t bias_shift, const uint16_t out_shift, const q7_t *bias, q7_t *pOut, q15_t *vec_buffer)</argsstring>
        <name>riscv_fully_connected_q7</name>
        <param>
          <type>const q7_t *</type>
          <declname>pV</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>pM</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dim_vec</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>num_of_rows</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_shift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>vec_buffer</declname>
        </param>
        <briefdescription>
<para>Q7 basic fully-connected layer function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pV</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pM</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to matrix weights </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dim_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_of_rows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in weight matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of left-shift for bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of right-shift for output </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">vec_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer space for input </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns <computeroutput>RISCV_MATH_SUCCESS</computeroutput></para></simplesect>
<bold>Buffer size:</bold></para><para>vec_buffer size: dim_vec</para><para>This basic function is designed to work with regular weight matrix without interleaving. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q7.c" line="69" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q7.c" bodystart="69" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="group__FC_1ga7941d995077149ea20950bb2e44f4bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>riscv_status</type>
        <definition>riscv_status riscv_fully_connected_q7_opt</definition>
        <argsstring>(const q7_t *pV, const q7_t *pM, const uint16_t dim_vec, const uint16_t num_of_rows, const uint16_t bias_shift, const uint16_t out_shift, const q7_t *bias, q7_t *pOut, q15_t *vec_buffer)</argsstring>
        <name>riscv_fully_connected_q7_opt</name>
        <param>
          <type>const q7_t *</type>
          <declname>pV</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>pM</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>dim_vec</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>num_of_rows</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>bias_shift</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const q7_t *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>q7_t *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>vec_buffer</declname>
        </param>
        <briefdescription>
<para>Q7 opt fully-connected layer function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pV</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pM</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to matrix weights </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dim_vec</parametername>
</parameternamelist>
<parameterdescription>
<para>length of the vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">num_of_rows</parametername>
</parameternamelist>
<parameterdescription>
<para>number of rows in weight matrix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of left-shift for bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of right-shift for output </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">bias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">vec_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer space for input </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns <computeroutput>RISCV_MATH_SUCCESS</computeroutput></para></simplesect>
<bold>Buffer size:</bold></para><para>vec_buffer size: dim_vec</para><para>This opt function is designed to work with interleaved weight matrix. The vector input is assumed in q7_t format, we call riscv_q7_to_q15_no_shift_shuffle function to expand into q15_t format with certain weight re-ordering, refer to the function comments for more details. Here we use only one pointer to read 4 rows in the weight matrix. So if the original q7_t matrix looks like this:</para><para>| a11 | a12 | a13 | a14 | a15 | a16 | a17 |</para><para>| a21 | a22 | a23 | a24 | a25 | a26 | a27 |</para><para>| a31 | a32 | a33 | a34 | a35 | a36 | a37 |</para><para>| a41 | a42 | a43 | a44 | a45 | a46 | a47 |</para><para>| a51 | a52 | a53 | a54 | a55 | a56 | a57 |</para><para>| a61 | a62 | a63 | a64 | a65 | a66 | a67 |</para><para>We operates on multiple-of-4 rows, so the first four rows becomes</para><para>| a11 | a21 | a13 | a23 | a31 | a41 | a33 | a43 |</para><para>| a12 | a22 | a14 | a24 | a32 | a42 | a34 | a44 |</para><para>| a15 | a25 | a35 | a45 | a16 | a26 | a36 | a46 |</para><para>So within the kernel, we first read the re-ordered vector in as:</para><para>| b1 | b3 | and | b2 | b4 |</para><para>the four q31_t weights will look like</para><para>| a11 | a13 |, | a21 | a23 |, | a31 | a33 |, | a41 | a43 |</para><para>| a12 | a14 |, | a22 | a24 |, | a32 | a34 |, | a42 | a44 |</para><para>The column left over will be in-order. which is:</para><para>| a17 | a27 | a37 | a47 |</para><para>For the left-over rows, we do 1x1 computation, so the data remains as its original order.</para><para>So the stored weight matrix looks like this:</para><para>| a11 | a21 | a13 | a23 | a31 | a41 |</para><para>| a33 | a43 | a12 | a22 | a14 | a24 |</para><para>| a32 | a42 | a34 | a44 | a15 | a25 |</para><para>| a35 | a45 | a16 | a26 | a36 | a46 |</para><para>| a17 | a27 | a37 | a47 | a51 | a52 |</para><para>| a53 | a54 | a55 | a56 | a57 | a61 |</para><para>| a62 | a63 | a64 | a65 | a66 | a67 | </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q7_opt.c" line="130" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_q7_opt.c" bodystart="130" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="group__FC_1gac1a460a0f6067be15cb30855f94933ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>riscv_status</type>
        <definition>riscv_status riscv_fully_connected_s8</definition>
        <argsstring>(const int8_t *pInput, const int8_t *pWeight, const uint16_t col_dim, const uint16_t row_dim, const uint16_t nb_batches, const int32_t input_offset, const int32_t filter_offset, const int32_t out_mult, const int32_t out_shift, const int32_t output_offset, const int8_t *pBias, int8_t *pOut, const int32_t output_activation_min, const int32_t output_activation_max, q15_t *vec_buffer)</argsstring>
        <name>riscv_fully_connected_s8</name>
        <param>
          <type>const int8_t *</type>
          <declname>pInput</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>pWeight</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>col_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>row_dim</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>nb_batches</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>input_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>filter_offset</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_mult</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>out_shift</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>output_offset</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>pBias</declname>
        </param>
        <param>
          <type>int8_t *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>output_activation_min</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>output_activation_max</declname>
        </param>
        <param>
          <type>q15_t *</type>
          <declname>vec_buffer</declname>
        </param>
        <briefdescription>
<para>S8 basic fully-connected layer function for TF Lite. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pInput</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to pInput vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pWeight</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to matrix weights </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the input vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">row_dim</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension of the output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nb_batches</parametername>
</parameternamelist>
<parameterdescription>
<para>number of batches </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input_offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filter_offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_mult</parametername>
</parameternamelist>
<parameterdescription>
<para>requantization parameter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">out_shift</parametername>
</parameternamelist>
<parameterdescription>
<para>requantization parameter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pBias</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to bias </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to output vector </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_activation_min</parametername>
</parameternamelist>
<parameterdescription>
<para>for clamping </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">output_activation_max</parametername>
</parameternamelist>
<parameterdescription>
<para>for clamping </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">vec_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to buffer space for pInput </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns RISCV_MATH_SUCCESS</para></simplesect>
<bold>Buffer size:</bold></para><para>vec_buffer size: col_dim of word16.</para><para>This basic function is designed to work with regular pWeight matrix without interleaving. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_s8.c" line="77" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Source/FullyConnectedFunctions/riscv_fully_connected_s8.c" bodystart="77" bodyend="298"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Perform fully-connected layer</para><para>Fully-connected layer is basically a matrix-vector multiplication with bias. The matrix is the weights and the input/output vectors are the activation values. Supported {weight, activation} precisions include {8-bit, 8-bit}, {16-bit, 16-bit}, and {8-bit, 16-bit}.</para><para>Here we have two types of kernel functions. The basic function implements the function using regular GEMV approach. The opt functions operates with weights in interleaved formats. </para>    </detaileddescription>
  </compounddef>
</doxygen>
