<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="para__gen_8py" kind="file">
    <compoundname>para_gen.py</compoundname>
    <innernamespace refid="namespacepara__gen">para_gen</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepara__gen" refkind="compound"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>a<sp/>simple<sp/>script<sp/>to<sp/>generate<sp/>and<sp/>convert<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>from<sp/>regular<sp/>ordering<sp/>to<sp/>specific<sp/>ordering<sp/>used<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>q7_x4<sp/>or<sp/>q7_q15_x4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacepara__gen_1ab7f5de20ae32542da9f83a8e99850722" kindref="member">convert_to_x4_weights</ref>(weights):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>[r,<sp/>h,<sp/>w,<sp/>c]<sp/>=<sp/>weights.shape</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>weights<sp/>=<sp/>np.reshape(weights,<sp/>(r,<sp/>h*w*c))</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>num_of_rows<sp/>=<sp/>r</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>num_of_cols<sp/>=<sp/>h*w*c</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>new_weights<sp/>=<sp/>np.copy(weights)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>new_weights<sp/>=<sp/>np.reshape(new_weights,<sp/>(r*h*w*c))</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>counter<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(int(num_of_rows)/4):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>only<sp/>need<sp/>to<sp/>do<sp/>the<sp/>re-ordering<sp/>for<sp/>every<sp/>4<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row_base<sp/>=<sp/>4*i</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range<sp/>(int(num_of_cols)/4):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>each<sp/>4<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_base<sp/>=<sp/>4*j</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter]<sp/><sp/><sp/>=<sp/><sp/>weights[row_base<sp/><sp/>][column_base<sp/><sp/>]</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+1]<sp/>=<sp/><sp/>weights[row_base+1][column_base<sp/><sp/>]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+2]<sp/>=<sp/><sp/>weights[row_base<sp/><sp/>][column_base+2]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+3]<sp/>=<sp/><sp/>weights[row_base+1][column_base+2]</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+4]<sp/>=<sp/><sp/>weights[row_base+2][column_base<sp/><sp/>]</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+5]<sp/>=<sp/><sp/>weights[row_base+3][column_base<sp/><sp/>]</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+6]<sp/>=<sp/><sp/>weights[row_base+2][column_base+2]</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+7]<sp/>=<sp/><sp/>weights[row_base+3][column_base+2]</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+8]<sp/>=<sp/><sp/>weights[row_base<sp/><sp/>][column_base+1]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+9]<sp/>=<sp/><sp/>weights[row_base+1][column_base+1]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+10]<sp/>=<sp/>weights[row_base<sp/><sp/>][column_base+3]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+11]<sp/>=<sp/>weights[row_base+1][column_base+3]</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+12]<sp/>=<sp/>weights[row_base+2][column_base+1]</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+13]<sp/>=<sp/>weights[row_base+3][column_base+1]</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+14]<sp/>=<sp/>weights[row_base+2][column_base+3]</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+15]<sp/>=<sp/>weights[row_base+3][column_base+3]</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter<sp/>=<sp/>counter<sp/>+<sp/>16</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>remaining<sp/>ones<sp/>are<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range((int)(num_of_cols-num_of_cols%4),<sp/>int(num_of_cols)):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter]<sp/>=<sp/>weights[row_base][j]</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+1]<sp/>=<sp/>weights[row_base+1][j]</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+2]<sp/>=<sp/>weights[row_base+2][j]</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+3]<sp/>=<sp/>weights[row_base+3][j]</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter<sp/>=<sp/>counter<sp/>+<sp/>4</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_weights</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacepara__gen_1a75db0b43a1b942aa87ff10fd3b73dc8d" kindref="member">convert_q7_q15_weights</ref>(weights):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>[r,<sp/>h,<sp/>w,<sp/>c]<sp/>=<sp/>weights.shape</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>weights<sp/>=<sp/>np.reshape(weights,<sp/>(r,<sp/>h*w*c))</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>num_of_rows<sp/>=<sp/>r</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>num_of_cols<sp/>=<sp/>h*w*c</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>new_weights<sp/>=<sp/>np.copy(weights)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>new_weights<sp/>=<sp/>np.reshape(new_weights,<sp/>(r*h*w*c))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>counter<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(int(num_of_rows)/4):</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>we<sp/>only<sp/>need<sp/>to<sp/>do<sp/>the<sp/>re-ordering<sp/>for<sp/>every<sp/>4<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row_base<sp/>=<sp/>4*i</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range<sp/>(int(num_of_cols)/2):</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>each<sp/>2<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_base<sp/>=<sp/>2*j</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter]<sp/><sp/><sp/>=<sp/><sp/>weights[row_base<sp/><sp/>][column_base<sp/><sp/>]</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+1]<sp/>=<sp/><sp/>weights[row_base+1][column_base<sp/><sp/>]</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+2]<sp/>=<sp/><sp/>weights[row_base<sp/><sp/>][column_base+1]</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+3]<sp/>=<sp/><sp/>weights[row_base+1][column_base+1]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+4]<sp/>=<sp/><sp/>weights[row_base+2][column_base<sp/><sp/>]</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+5]<sp/>=<sp/><sp/>weights[row_base+3][column_base<sp/><sp/>]</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+6]<sp/>=<sp/><sp/>weights[row_base+2][column_base+1]</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+7]<sp/>=<sp/><sp/>weights[row_base+3][column_base+1]</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter<sp/>=<sp/>counter<sp/>+<sp/>8</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>remaining<sp/>ones<sp/>are<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range((int)(num_of_cols-num_of_cols%2),<sp/>int(num_of_cols)):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter]<sp/>=<sp/>weights[row_base][j]</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+1]<sp/>=<sp/>weights[row_base+1][j]</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+2]<sp/>=<sp/>weights[row_base+2][j]</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_weights[counter+3]<sp/>=<sp/>weights[row_base+3][j]</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter<sp/>=<sp/>counter<sp/>+<sp/>4</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_weights</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">vec_dim<sp/>=<sp/>64</highlight></codeline>
<codeline lineno="88"><highlight class="normal">row_dim<sp/>=<sp/>32</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">update_weight<sp/>=<sp/>np.zeros((row_dim,vec_dim),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">reset_weight<sp/>=<sp/>np.zeros((row_dim,vec_dim),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">hidden_weight<sp/>=<sp/>np.zeros((row_dim,vec_dim),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">update_bias<sp/>=<sp/>np.zeros((row_dim),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">reset_bias<sp/>=<sp/>np.zeros((row_dim),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">hidden_bias<sp/>=<sp/>np.zeros((row_dim),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">input_data1<sp/>=<sp/>np.zeros((vec_dim-row_dim),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">input_data2<sp/>=<sp/>np.zeros((vec_dim-row_dim),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">history_data<sp/>=<sp/>np.zeros((row_dim),<sp/>dtype=int)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">outfile<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;riscv_nnexamples_gru_test_data.h&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(row_dim):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(vec_dim):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>update_weight[i][j]<sp/>=<sp/>np.random.randint(256)-128</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_weight[i][j]<sp/>=<sp/>np.random.randint(256)-128</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>hidden_weight[i][j]<sp/>=<sp/>np.random.randint(256)-128</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(row_dim):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>update_bias[i]<sp/>=<sp/><sp/>np.random.randint(256)-128</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>reset_bias[i]<sp/>=<sp/><sp/>np.random.randint(256)-128</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>hidden_bias[i]<sp/>=<sp/><sp/>np.random.randint(256)-128</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>history_data[i]<sp/>=<sp/>np.random.randint(2**10)-2**9</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(vec_dim-row_dim):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>input_data1[i]<sp/>=<sp/>np.random.randint(2**10)-2**9</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>input_data2[i]<sp/>=<sp/>np.random.randint(2**10)-2**9</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">weight<sp/>=<sp/>np.reshape(update_weight,<sp/>(row_dim,<sp/>vec_dim,<sp/>1,<sp/>1))</highlight></codeline>
<codeline lineno="121"><highlight class="normal">new_weight<sp/>=<sp/><ref refid="namespacepara__gen_1ab7f5de20ae32542da9f83a8e99850722" kindref="member">convert_to_x4_weights</ref>(weight)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>UPDATE_GATE_WEIGHT_X2<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">weight.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">new_weight<sp/>=<sp/><ref refid="namespacepara__gen_1a75db0b43a1b942aa87ff10fd3b73dc8d" kindref="member">convert_q7_q15_weights</ref>(weight)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>UPDATE_GATE_WEIGHT_X4<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">new_weight.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">weight<sp/>=<sp/>np.reshape(reset_weight,<sp/>(row_dim,<sp/>vec_dim,<sp/>1,<sp/>1))</highlight></codeline>
<codeline lineno="133"><highlight class="normal">new_weight<sp/>=<sp/><ref refid="namespacepara__gen_1ab7f5de20ae32542da9f83a8e99850722" kindref="member">convert_to_x4_weights</ref>(weight)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>RESET_GATE_WEIGHT_X2<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">weight.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">new_weight<sp/>=<sp/><ref refid="namespacepara__gen_1a75db0b43a1b942aa87ff10fd3b73dc8d" kindref="member">convert_q7_q15_weights</ref>(weight)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>RESET_GATE_WEIGHT_X4<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">new_weight.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">weight<sp/>=<sp/>np.reshape(hidden_weight,<sp/>(row_dim,<sp/>vec_dim,<sp/>1,<sp/>1))</highlight></codeline>
<codeline lineno="145"><highlight class="normal">new_weight<sp/>=<sp/><ref refid="namespacepara__gen_1ab7f5de20ae32542da9f83a8e99850722" kindref="member">convert_to_x4_weights</ref>(weight)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>HIDDEN_STATE_WEIGHT_X2<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">weight.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">new_weight<sp/>=<sp/><ref refid="namespacepara__gen_1a75db0b43a1b942aa87ff10fd3b73dc8d" kindref="member">convert_q7_q15_weights</ref>(weight)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>HIDDEN_STATE_WEIGHT_X4<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">new_weight.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>UPDATE_GATE_BIAS<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">update_bias.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>RESET_GATE_BIAS<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">reset_bias.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>HIDDEN_STATE_BIAS<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">update_bias.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>INPUT_DATA1<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">input_data1.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>INPUT_DATA2<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">input_data2.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;#define<sp/>HISTORY_DATA<sp/>{&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">history_data.tofile(outfile,sep=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,format=</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">outfile.write(</highlight><highlight class="stringliteral">&quot;}\n\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">outfile.close()</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/NN/Examples/RISCV/gru/para_gen.py"/>
  </compounddef>
</doxygen>
