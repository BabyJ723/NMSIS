<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="group__NMSIS__Core__CSR__Register__Access" kind="group">
    <compoundname>NMSIS_Core_CSR_Register_Access</compoundname>
    <title>Core CSR Register Access</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__NMSIS__Core__CSR__Register__Access_1gae84bf4e95944e61937f4ed2453e5ef23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> void</type>
        <definition>__STATIC_FORCEINLINE void __enable_irq</definition>
        <argsstring>(void)</argsstring>
        <name>__enable_irq</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Enable IRQ Interrupts. </para>        </briefdescription>
        <detaileddescription>
<para>Enables IRQ interrupts by setting the MIE-bit in the MSTATUS Register. <simplesect kind="remark"><para>Can only be executed in Privileged modes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="411" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="411" bodyend="414"/>
        <references refid="group__NMSIS__Core__CSR__Register__Access_1gafdbd9b5a14b44913675d0fa73ca6716f" compoundref="core__feature__base_8h" startline="358">__RV_CSR_SET</references>
        <references refid="group__NMSIS__Core__CSR__Registers_1ga7086e667c65affe87d2c32115193d736" compoundref="riscv__encoding_8h" startline="322">CSR_MSTATUS</references>
        <references refid="group__NMSIS__Core__CSR__Encoding_1ga225cb34e3b991318fa87f090cfc3fc5f" compoundref="riscv__encoding_8h" startline="37">MSTATUS_MIE</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__CSR__Register__Access_1ga2299877e4ba3e162ca9dbabd6e0abef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> void</type>
        <definition>__STATIC_FORCEINLINE void __disable_irq</definition>
        <argsstring>(void)</argsstring>
        <name>__disable_irq</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disable IRQ Interrupts. </para>        </briefdescription>
        <detaileddescription>
<para>Disables IRQ interrupts by clearing the MIE-bit in the MSTATUS Register. <simplesect kind="remark"><para>Can only be executed in Privileged modes. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="422" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="422" bodyend="425"/>
        <references refid="group__NMSIS__Core__CSR__Register__Access_1ga14cf0513f6b576fcd1ff700b08f65543" compoundref="core__feature__base_8h" startline="395">__RV_CSR_CLEAR</references>
        <references refid="group__NMSIS__Core__CSR__Registers_1ga7086e667c65affe87d2c32115193d736" compoundref="riscv__encoding_8h" startline="322">CSR_MSTATUS</references>
        <references refid="group__NMSIS__Core__CSR__Encoding_1ga225cb34e3b991318fa87f090cfc3fc5f" compoundref="riscv__encoding_8h" startline="37">MSTATUS_MIE</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__CSR__Register__Access_1ga0d524220141962c60352cfe0a219bdb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> uint64_t</type>
        <definition>__STATIC_FORCEINLINE uint64_t __get_rv_cycle</definition>
        <argsstring>(void)</argsstring>
        <name>__get_rv_cycle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read whole 64 bits value of mcycle counter. </para>        </briefdescription>
        <detaileddescription>
<para>This function will read the whole 64 bits of MCYCLE register <simplesect kind="return"><para>The whole 64 bits value of MCYCLE </para></simplesect>
<simplesect kind="remark"><para>It will work for both RV32 and RV64 to get full 64bits value of MCYCLE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="433" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="433" bodyend="452"/>
        <references refid="group__NMSIS__Core__CSR__Register__Access_1ga355c96e5bd1ab3df0203e23a887c00c0" compoundref="core__feature__base_8h" startline="303">__RV_CSR_READ</references>
        <references refid="group__NMSIS__Core__CSR__Registers_1ga5a7abfd3679706088142a50995c1bdb8" compoundref="riscv__encoding_8h" startline="361">CSR_MCYCLE</references>
        <references refid="group__NMSIS__Core__CSR__Registers_1gae3368bea588a2fcdf2e7d24707ef4dda" compoundref="riscv__encoding_8h" startline="459">CSR_MCYCLEH</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__CSR__Register__Access_1ga0755f3835c1d5788f99547c185dab2d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> uint64_t</type>
        <definition>__STATIC_FORCEINLINE uint64_t __get_rv_instret</definition>
        <argsstring>(void)</argsstring>
        <name>__get_rv_instret</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read whole 64 bits value of machine instruction-retired counter. </para>        </briefdescription>
        <detaileddescription>
<para>This function will read the whole 64 bits of MINSTRET register <simplesect kind="return"><para>The whole 64 bits value of MINSTRET </para></simplesect>
<simplesect kind="remark"><para>It will work for both RV32 and RV64 to get full 64bits value of MINSTRET </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="460" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="460" bodyend="479"/>
        <references refid="group__NMSIS__Core__CSR__Register__Access_1ga355c96e5bd1ab3df0203e23a887c00c0" compoundref="core__feature__base_8h" startline="303">__RV_CSR_READ</references>
        <references refid="group__NMSIS__Core__CSR__Registers_1ga204b84adcbccada25ecd7aff3c5a31f5" compoundref="riscv__encoding_8h" startline="362">CSR_MINSTRET</references>
        <references refid="group__NMSIS__Core__CSR__Registers_1gaa59d1f570770dc3be6cd493cbb5a12e4" compoundref="riscv__encoding_8h" startline="460">CSR_MINSTRETH</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__CSR__Register__Access_1ga5f54b26adf57d254f6a589dab36bd28a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> uint64_t</type>
        <definition>__STATIC_FORCEINLINE uint64_t __get_rv_time</definition>
        <argsstring>(void)</argsstring>
        <name>__get_rv_time</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read whole 64 bits value of real-time clock. </para>        </briefdescription>
        <detaileddescription>
<para>This function will read the whole 64 bits of TIME register <simplesect kind="return"><para>The whole 64 bits value of TIME CSR </para></simplesect>
<simplesect kind="remark"><para>It will work for both RV32 and RV64 to get full 64bits value of TIME </para></simplesect>
<simplesect kind="attention"><para>only available when user mode available </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="488" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="488" bodyend="507"/>
        <references refid="group__NMSIS__Core__CSR__Register__Access_1ga355c96e5bd1ab3df0203e23a887c00c0" compoundref="core__feature__base_8h" startline="303">__RV_CSR_READ</references>
        <references refid="group__NMSIS__Core__CSR__Registers_1ga4bbdf33e8b20f4cb020869e7394e388a" compoundref="riscv__encoding_8h" startline="282">CSR_TIME</references>
        <references refid="group__NMSIS__Core__CSR__Registers_1ga2e2ce9bac3d1ad2128a4eb9438a1022d" compoundref="riscv__encoding_8h" startline="428">CSR_TIMEH</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__NMSIS__Core__CSR__Register__Access_1gab68e26f20086bc54e8fc3af533c8ed7f" prot="public" static="no">
        <name>__RV_CSR_SWAP</name>
        <param><defname>csr</defname></param>
        <param><defname>val</defname></param>
        <briefdescription>
<para>CSR operation Macro for csrrw instruction. </para>        </briefdescription>
        <detaileddescription>
<para>Read the content of csr register to __v, then write content of val into csr register, then return __v <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csr</parametername>
</parameternamelist>
<parameterdescription>
<para>CSR macro definition defined in <ref refid="group__NMSIS__Core__CSR__Registers" kindref="compound">Core CSR Registers</ref>, eg. <ref refid="group__NMSIS__Core__CSR__Registers_1ga7086e667c65affe87d2c32115193d736" kindref="member">CSR_MSTATUS</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>value to store into the CSR register </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the CSR register value before written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="285" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__CSR__Register__Access_1ga355c96e5bd1ab3df0203e23a887c00c0" prot="public" static="no">
        <name>__RV_CSR_READ</name>
        <param><defname>csr</defname></param>
        <briefdescription>
<para>CSR operation Macro for csrr instruction. </para>        </briefdescription>
        <detaileddescription>
<para>Read the content of csr register to __v and return it <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csr</parametername>
</parameternamelist>
<parameterdescription>
<para>CSR macro definition defined in <ref refid="group__NMSIS__Core__CSR__Registers" kindref="compound">Core CSR Registers</ref>, eg. <ref refid="group__NMSIS__Core__CSR__Registers_1ga7086e667c65affe87d2c32115193d736" kindref="member">CSR_MSTATUS</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the CSR register value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="303" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="303" bodyend="-1"/>
        <referencedby refid="group__NMSIS__Core__IntExc_1ga7b8025dd8eac9993066d730cee6475a0" compoundref="core__feature__eclic_8h" startline="732" endline="741">__ECLIC_GetVector</referencedby>
        <referencedby refid="group__NMSIS__Core__IntExc_1ga2e80049df57b285d4dd43454377c0845" compoundref="core__feature__eclic_8h" startline="703" endline="718">__ECLIC_SetVector</referencedby>
        <referencedby refid="group__NMSIS__Core__IntExc_1ga05bee6a5e41963ef1845c8a7e5a09c89" compoundref="core__feature__eclic_8h" startline="770" endline="774">__get_exc_entry</referencedby>
        <referencedby refid="group__NMSIS__Core__IntExc_1gac5b9521ea1bd5260330714b8032d04d5" compoundref="core__feature__eclic_8h" startline="829" endline="832">__get_nmi_entry</referencedby>
        <referencedby refid="group__NMSIS__Core__IntExc_1ga2fe20dcdecc453c6709448944b1f5350" compoundref="core__feature__eclic_8h" startline="809" endline="817">__get_nonvec_entry</referencedby>
        <referencedby refid="group__NMSIS__Core__PMP__Functions_1ga0fc1168753b68d4105d6fc96b038b1fd" compoundref="core__feature__pmp_8h" startline="203" endline="224">__get_PMPADDRx</referencedby>
        <referencedby refid="group__NMSIS__Core__PMP__Functions_1gadca32ce47cd692eb2e7fe25abf36c103" compoundref="core__feature__pmp_8h" startline="163" endline="172">__get_PMPCFGx</referencedby>
        <referencedby refid="group__NMSIS__Core__PMP__Functions_1gadf37b13460f0c2c0d7d2641f31ebbf72" compoundref="core__feature__pmp_8h" startline="61" endline="95">__get_PMPxCFG</referencedby>
        <referencedby refid="group__NMSIS__Core__CSR__Register__Access_1ga0d524220141962c60352cfe0a219bdb4" compoundref="core__feature__base_8h" startline="433" endline="452">__get_rv_cycle</referencedby>
        <referencedby refid="group__NMSIS__Core__CSR__Register__Access_1ga0755f3835c1d5788f99547c185dab2d2" compoundref="core__feature__base_8h" startline="460" endline="479">__get_rv_instret</referencedby>
        <referencedby refid="group__NMSIS__Core__CSR__Register__Access_1ga5f54b26adf57d254f6a589dab36bd28a" compoundref="core__feature__base_8h" startline="488" endline="507">__get_rv_time</referencedby>
        <referencedby refid="group__NMSIS__Core__IntExc_1gadbe0f14f32c5989304fd05faf0cff648" compoundref="core__feature__eclic_8h" startline="787" endline="796">__set_nonvec_entry</referencedby>
        <referencedby refid="group__NMSIS__Core__PMP__Functions_1gae1905cc6904d78db702c1a0b72b326f5" compoundref="core__feature__pmp_8h" startline="103" endline="149">__set_PMPxCFG</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__CSR__Register__Access_1gaa2d43f43f3f333cfd8e5a326a2aed413" prot="public" static="no">
        <name>__RV_CSR_WRITE</name>
        <param><defname>csr</defname></param>
        <param><defname>val</defname></param>
        <briefdescription>
<para>CSR operation Macro for csrw instruction. </para>        </briefdescription>
        <detaileddescription>
<para>Write the content of val to csr register <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csr</parametername>
</parameternamelist>
<parameterdescription>
<para>CSR macro definition defined in <ref refid="group__NMSIS__Core__CSR__Registers" kindref="compound">Core CSR Registers</ref>, eg. <ref refid="group__NMSIS__Core__CSR__Registers_1ga7086e667c65affe87d2c32115193d736" kindref="member">CSR_MSTATUS</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>value to store into the CSR register </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="321" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="321" bodyend="-1"/>
        <referencedby refid="group__NMSIS__Core__IntExc_1gaec014abd3940e642f652b97b70d7ac8e" compoundref="core__feature__eclic_8h" startline="753" endline="758">__set_exc_entry</referencedby>
        <referencedby refid="group__NMSIS__Core__IntExc_1gadbe0f14f32c5989304fd05faf0cff648" compoundref="core__feature__eclic_8h" startline="787" endline="796">__set_nonvec_entry</referencedby>
        <referencedby refid="group__NMSIS__Core__PMP__Functions_1ga6341b28b3c2fe7c6e697a1adee7d4dd2" compoundref="core__feature__pmp_8h" startline="232" endline="253">__set_PMPADDRx</referencedby>
        <referencedby refid="group__NMSIS__Core__PMP__Functions_1gaf509ec494237545e28812695aaaa30c8" compoundref="core__feature__pmp_8h" startline="186" endline="195">__set_PMPCFGx</referencedby>
        <referencedby refid="group__NMSIS__Core__PMP__Functions_1gae1905cc6904d78db702c1a0b72b326f5" compoundref="core__feature__pmp_8h" startline="103" endline="149">__set_PMPxCFG</referencedby>
        <referencedby refid="group__NMSIS__Core__CPU__Intrinsic_1ga1a1db7d1454df1cf7b1214d18349cac1" compoundref="core__feature__base_8h" startline="600" endline="603">__set_wfi_sleepmode</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__CSR__Register__Access_1ga01a3710ed5d399eec664b69fd01b33fb" prot="public" static="no">
        <name>__RV_CSR_READ_SET</name>
        <param><defname>csr</defname></param>
        <param><defname>val</defname></param>
        <briefdescription>
<para>CSR operation Macro for csrrs instruction. </para>        </briefdescription>
        <detaileddescription>
<para>Read the content of csr register to __v, then set csr register to be __v | val, then return __v <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csr</parametername>
</parameternamelist>
<parameterdescription>
<para>CSR macro definition defined in <ref refid="group__NMSIS__Core__CSR__Registers" kindref="compound">Core CSR Registers</ref>, eg. <ref refid="group__NMSIS__Core__CSR__Registers_1ga7086e667c65affe87d2c32115193d736" kindref="member">CSR_MSTATUS</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask value to be used wih csrrs instruction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the CSR register value before written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="340" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__CSR__Register__Access_1gafdbd9b5a14b44913675d0fa73ca6716f" prot="public" static="no">
        <name>__RV_CSR_SET</name>
        <param><defname>csr</defname></param>
        <param><defname>val</defname></param>
        <briefdescription>
<para>CSR operation Macro for csrs instruction. </para>        </briefdescription>
        <detaileddescription>
<para>Set csr register to be csr_content | val <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csr</parametername>
</parameternamelist>
<parameterdescription>
<para>CSR macro definition defined in <ref refid="group__NMSIS__Core__CSR__Registers" kindref="compound">Core CSR Registers</ref>, eg. <ref refid="group__NMSIS__Core__CSR__Registers_1ga7086e667c65affe87d2c32115193d736" kindref="member">CSR_MSTATUS</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask value to be used wih csrs instruction </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="358" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="358" bodyend="-1"/>
        <referencedby refid="group__NMSIS__Core__CPU__Intrinsic_1ga16f715797bba0ac2ed2e1820c63443cd" compoundref="core__feature__base_8h" startline="671" endline="674">__disable_all_counter</referencedby>
        <referencedby refid="group__NMSIS__Core__CPU__Intrinsic_1gaf9ada8a615338120fa38a6e193fd7517" compoundref="core__feature__base_8h" startline="631" endline="634">__disable_mcycle_counter</referencedby>
        <referencedby refid="group__NMSIS__Core__CPU__Intrinsic_1gae1cb8d99e36d784e9071fec80e1f02fe" compoundref="core__feature__base_8h" startline="651" endline="654">__disable_minstret_counter</referencedby>
        <referencedby refid="group__NMSIS__Core__CSR__Register__Access_1gae84bf4e95944e61937f4ed2453e5ef23" compoundref="core__feature__base_8h" startline="411" endline="414">__enable_irq</referencedby>
        <referencedby refid="group__NMSIS__Core__CPU__Intrinsic_1gaa60612c5e378681f32e815743823ba15" compoundref="core__feature__base_8h" startline="611" endline="614">__TXEVT</referencedby>
        <referencedby refid="group__NMSIS__Core__CPU__Intrinsic_1gaca38170721a2eefd87017ed350162c4c" compoundref="core__feature__base_8h" startline="555" endline="560">__WFE</referencedby>
        <referencedby refid="group__NMSIS__Core__DCache_1gaf90783ed69b3589cde6fe7dbabeb17c0" compoundref="core__feature__cache_8h" startline="100" endline="103">EnableDCache</referencedby>
        <referencedby refid="group__NMSIS__Core__ICache_1ga76dfd7aff65a6a7fa91b53dbe44f9ce5" compoundref="core__feature__cache_8h" startline="63" endline="66">EnableICache</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__CSR__Register__Access_1ga1ead73950cec4e7221a24500846f39a2" prot="public" static="no">
        <name>__RV_CSR_READ_CLEAR</name>
        <param><defname>csr</defname></param>
        <param><defname>val</defname></param>
        <briefdescription>
<para>CSR operation Macro for csrrc instruction. </para>        </briefdescription>
        <detaileddescription>
<para>Read the content of csr register to __v, then set csr register to be __v &amp; ~val, then return __v <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csr</parametername>
</parameternamelist>
<parameterdescription>
<para>CSR macro definition defined in <ref refid="group__NMSIS__Core__CSR__Registers" kindref="compound">Core CSR Registers</ref>, eg. <ref refid="group__NMSIS__Core__CSR__Registers_1ga7086e667c65affe87d2c32115193d736" kindref="member">CSR_MSTATUS</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask value to be used wih csrrc instruction </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the CSR register value before written </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="377" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__CSR__Register__Access_1ga14cf0513f6b576fcd1ff700b08f65543" prot="public" static="no">
        <name>__RV_CSR_CLEAR</name>
        <param><defname>csr</defname></param>
        <param><defname>val</defname></param>
        <briefdescription>
<para>CSR operation Macro for csrc instruction. </para>        </briefdescription>
        <detaileddescription>
<para>Set csr register to be csr_content &amp; ~val <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>csr</parametername>
</parameternamelist>
<parameterdescription>
<para>CSR macro definition defined in <ref refid="group__NMSIS__Core__CSR__Registers" kindref="compound">Core CSR Registers</ref>, eg. <ref refid="group__NMSIS__Core__CSR__Registers_1ga7086e667c65affe87d2c32115193d736" kindref="member">CSR_MSTATUS</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask value to be used wih csrc instruction </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" line="395" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_base.h" bodystart="395" bodyend="-1"/>
        <referencedby refid="group__NMSIS__Core__CSR__Register__Access_1ga2299877e4ba3e162ca9dbabd6e0abef6" compoundref="core__feature__base_8h" startline="422" endline="425">__disable_irq</referencedby>
        <referencedby refid="group__NMSIS__Core__CPU__Intrinsic_1ga1b25cc01665431cd509fd3c1be93a811" compoundref="core__feature__base_8h" startline="661" endline="664">__enable_all_counter</referencedby>
        <referencedby refid="group__NMSIS__Core__CPU__Intrinsic_1gadba90c4a57befeb5e4f739295af55e73" compoundref="core__feature__base_8h" startline="621" endline="624">__enable_mcycle_counter</referencedby>
        <referencedby refid="group__NMSIS__Core__CPU__Intrinsic_1gae7bb45974eee5b66ea6332ba0ccf23d5" compoundref="core__feature__base_8h" startline="641" endline="644">__enable_minstret_counter</referencedby>
        <referencedby refid="group__NMSIS__Core__CPU__Intrinsic_1gaca38170721a2eefd87017ed350162c4c" compoundref="core__feature__base_8h" startline="555" endline="560">__WFE</referencedby>
        <referencedby refid="group__NMSIS__Core__CPU__Intrinsic_1ga8bc0687a967ccba8e8adbe7abe5fe2f7" compoundref="core__feature__base_8h" startline="542" endline="546">__WFI</referencedby>
        <referencedby refid="group__NMSIS__Core__DCache_1gab30be00d8a0583adac5d786149db433f" compoundref="core__feature__cache_8h" startline="114" endline="117">DisableDCache</referencedby>
        <referencedby refid="group__NMSIS__Core__ICache_1ga4a855b01222d0c42d413f168651616e5" compoundref="core__feature__cache_8h" startline="77" endline="80">DisableICache</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions to access the Core CSR Registers. </para>    </briefdescription>
    <detaileddescription>
<para>The following functions or macros provide access to Core CSR registers.<itemizedlist>
<listitem><para><ref refid="group__NMSIS__Core__CSR__Encoding" kindref="compound">Core CSR Encodings</ref></para></listitem><listitem><para><ref refid="group__NMSIS__Core__CSR__Registers" kindref="compound">Core CSR Registers</ref> </para></listitem></itemizedlist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
