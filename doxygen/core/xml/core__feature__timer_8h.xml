<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="core__feature__timer_8h" kind="file">
    <compoundname>core_feature_timer.h</compoundname>
    <includedby refid="nmsis__core_8h" local="yes">nmsis_core.h</includedby>
    <invincdepgraph>
      <node id="25">
        <label>core_feature_timer.h</label>
        <link refid="core_feature_timer.h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>nmsis_core.h</label>
        <link refid="nmsis__core_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structSysTimer__Type" prot="public">SysTimer_Type</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga54ecde494dc735799ed978b91bf709d8" prot="public" static="no">
        <name>SysTimer_MTIMECTL_TIMESTOP_Pos</name>
        <initializer>0U</initializer>
        <briefdescription>
<para>SysTick Timer MTIMECTL: TIMESTOP bit Position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="63" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1gaab93093166696848e52d055a2e139e9f" prot="public" static="no">
        <name>SysTimer_MTIMECTL_TIMESTOP_Msk</name>
        <initializer>(1UL &lt;&lt; SysTimer_MTIMECTL_TIMESTOP_Pos)</initializer>
        <briefdescription>
<para>SysTick Timer MTIMECTL: TIMESTOP Mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="64" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="64" bodyend="-1"/>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga95360ac7f66badad67c57d540a1ae4e1" compoundref="core__feature__timer_8h" startline="160" endline="163">SysTimer_Start</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gaf74222f6d8c603f61571884732726e91" compoundref="core__feature__timer_8h" startline="171" endline="174">SysTimer_Stop</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1gac0cd51358c944397328146b6f4a4a8a5" prot="public" static="no">
        <name>SysTimer_MTIMECTL_CMPCLREN_Pos</name>
        <initializer>1U</initializer>
        <briefdescription>
<para>SysTick Timer MTIMECTL: CMPCLREN bit Position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="65" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga5d372de2d560f90d8ed8306277068cf1" prot="public" static="no">
        <name>SysTimer_MTIMECTL_CMPCLREN_Msk</name>
        <initializer>(1UL &lt;&lt; SysTimer_MTIMECTL_CMPCLREN_Pos)</initializer>
        <briefdescription>
<para>SysTick Timer MTIMECTL: CMPCLREN Mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="66" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga4ee15edaeadcd48a5aaab1aa9ec20496" prot="public" static="no">
        <name>SysTimer_MTIMECTL_CLKSRC_Pos</name>
        <initializer>2U</initializer>
        <briefdescription>
<para>SysTick Timer MTIMECTL: CLKSRC bit Position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="67" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga2513c82f2ce2811952b83f6d1c8e4172" prot="public" static="no">
        <name>SysTimer_MTIMECTL_CLKSRC_Msk</name>
        <initializer>(1UL &lt;&lt; SysTimer_MTIMECTL_CLKSRC_Pos)</initializer>
        <briefdescription>
<para>SysTick Timer MTIMECTL: CLKSRC Mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="68" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1gad756a0be76154b3f64f6790663581c52" prot="public" static="no">
        <name>SysTimer_MSIP_MSIP_Pos</name>
        <initializer>0U</initializer>
        <briefdescription>
<para>SysTick Timer MSIP: MSIP bit Position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="70" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga62b819dc444c74f1424c50cf13fcb2a0" prot="public" static="no">
        <name>SysTimer_MSIP_MSIP_Msk</name>
        <initializer>(1UL &lt;&lt; SysTimer_MSIP_MSIP_Pos)</initializer>
        <briefdescription>
<para>SysTick Timer MSIP: MSIP Mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="71" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="71" bodyend="-1"/>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga57b4f64ed87262daf831573e704b12c8" compoundref="core__feature__timer_8h" startline="231" endline="234">SysTimer_ClearSWIRQ</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gaa4d13cddf35ef77fd3b3b59e82eb1d47" compoundref="core__feature__timer_8h" startline="217" endline="220">SysTimer_SetSWIRQ</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1gacffb8ad26cdd32cef2ee67bde9ddb122" prot="public" static="no">
        <name>SysTimer_MTIMER_Msk</name>
        <initializer>(0xFFFFFFFFFFFFFFFFULL)</initializer>
        <briefdescription>
<para>SysTick Timer MTIMER value Mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="73" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga0fb8a9811b2d773529fb0f7db866e5e5" prot="public" static="no">
        <name>SysTimer_MTIMERCMP_Msk</name>
        <initializer>(0xFFFFFFFFFFFFFFFFULL)</initializer>
        <briefdescription>
<para>SysTick Timer MTIMERCMP value Mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="74" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga9b50cbd77c10af62deca85e3d2509c72" prot="public" static="no">
        <name>SysTimer_MTIMECTL_Msk</name>
        <initializer>(0xFFFFFFFFUL)</initializer>
        <briefdescription>
<para>SysTick Timer MTIMECTL/MSTOP value Mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="75" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="75" bodyend="-1"/>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gafc922423699826bc5d833ab5d08219d2" compoundref="core__feature__timer_8h" startline="203" endline="206">SysTimer_GetControlValue</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gaf0e25c3ad2965ce6cd523cd101cee16f" compoundref="core__feature__timer_8h" startline="190" endline="193">SysTimer_SetControlValue</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga40ba61e02d93e37ffbb6452b54806af6" prot="public" static="no">
        <name>SysTimer_MSIP_Msk</name>
        <initializer>(0xFFFFFFFFUL)</initializer>
        <briefdescription>
<para>SysTick Timer MSIP value Mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="76" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="76" bodyend="-1"/>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga0431e3f4a44ca2265884c19096912729" compoundref="core__feature__timer_8h" startline="247" endline="250">SysTimer_GetMsipValue</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gaa7f8e6c1423f582f958e151ce692395c" compoundref="core__feature__timer_8h" startline="258" endline="261">SysTimer_SetMsipValue</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga1028d9f654728860327c082a44b9f34f" prot="public" static="no">
        <name>SysTimer_MSFTRST_Msk</name>
        <initializer>(0xFFFFFFFFUL)</initializer>
        <briefdescription>
<para>SysTick Timer MSFTRST value Mask. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="77" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga181dffb1870282631f8858ea23d9b8fa" prot="public" static="no">
        <name>SysTimer_MSFRST_KEY</name>
        <initializer>(0x80000A5FUL)</initializer>
        <briefdescription>
<para>SysTick Timer Software Reset Request Key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="79" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="79" bodyend="-1"/>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gac41101f6eb4776148a05d1b02b643f8e" compoundref="core__feature__timer_8h" startline="273" endline="277">SysTimer_SoftwareReset</referencedby>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga2107a0ae6d9deefff31edf506a6e1e91" prot="public" static="no">
        <name>SysTimer_BASE</name>
        <initializer>__SYSTIMER_BASEADDR</initializer>
        <briefdescription>
<para>SysTick Base Address. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="86" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" prot="public" static="no">
        <name>SysTimer</name>
        <initializer>((<ref refid="structSysTimer__Type" kindref="compound">SysTimer_Type</ref> *) <ref refid="group__NMSIS__Core__SysTimer__Registers_1ga2107a0ae6d9deefff31edf506a6e1e91" kindref="member">SysTimer_BASE</ref>)</initializer>
        <briefdescription>
<para>SysTick configuration struct. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="87" column="9" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="87" bodyend="-1"/>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga9906dae1937eac222354df5a9069945a" compoundref="core__feature__timer_8h" startline="336" endline="340">SysTick_Reload</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga57b4f64ed87262daf831573e704b12c8" compoundref="core__feature__timer_8h" startline="231" endline="234">SysTimer_ClearSWIRQ</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga515d63f4e4581430fb0bf6e864e5bca9" compoundref="core__feature__timer_8h" startline="149" endline="152">SysTimer_GetCompareValue</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gafc922423699826bc5d833ab5d08219d2" compoundref="core__feature__timer_8h" startline="203" endline="206">SysTimer_GetControlValue</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga5b454e48769abd7a88c2cc65fe53ac7a" compoundref="core__feature__timer_8h" startline="119" endline="122">SysTimer_GetLoadValue</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga0431e3f4a44ca2265884c19096912729" compoundref="core__feature__timer_8h" startline="247" endline="250">SysTimer_GetMsipValue</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga52e85918789aa95fc4cd0d7238ca9b6c" compoundref="core__feature__timer_8h" startline="135" endline="138">SysTimer_SetCompareValue</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gaf0e25c3ad2965ce6cd523cd101cee16f" compoundref="core__feature__timer_8h" startline="190" endline="193">SysTimer_SetControlValue</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga08c74ffae27d46218ae11321ff5e1673" compoundref="core__feature__timer_8h" startline="105" endline="108">SysTimer_SetLoadValue</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gaa7f8e6c1423f582f958e151ce692395c" compoundref="core__feature__timer_8h" startline="258" endline="261">SysTimer_SetMsipValue</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gaa4d13cddf35ef77fd3b3b59e82eb1d47" compoundref="core__feature__timer_8h" startline="217" endline="220">SysTimer_SetSWIRQ</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gac41101f6eb4776148a05d1b02b643f8e" compoundref="core__feature__timer_8h" startline="273" endline="277">SysTimer_SoftwareReset</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga95360ac7f66badad67c57d540a1ae4e1" compoundref="core__feature__timer_8h" startline="160" endline="163">SysTimer_Start</referencedby>
        <referencedby refid="group__NMSIS__Core__SysTimer_1gaf74222f6d8c603f61571884732726e91" compoundref="core__feature__timer_8h" startline="171" endline="174">SysTimer_Stop</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1ga08c74ffae27d46218ae11321ff5e1673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> void</type>
        <definition>__STATIC_FORCEINLINE void SysTimer_SetLoadValue</definition>
        <argsstring>(uint64_t value)</argsstring>
        <name>SysTimer_SetLoadValue</name>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set system timer load value. </para>        </briefdescription>
        <detaileddescription>
<para>This function set the system timer load value in MTIMER register. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to set system timer MTIMER register. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>Load value is 64bits wide.</para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1ga5b454e48769abd7a88c2cc65fe53ac7a" kindref="member">SysTimer_GetLoadValue</ref> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="105" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="105" bodyend="108"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga349805c25d9aa753c6fd69b3c0151126" compoundref="core__feature__timer_8h" startline="304" endline="312">SysTick_Config</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1ga5b454e48769abd7a88c2cc65fe53ac7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> uint64_t</type>
        <definition>__STATIC_FORCEINLINE uint64_t SysTimer_GetLoadValue</definition>
        <argsstring>(void)</argsstring>
        <name>SysTimer_GetLoadValue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get system timer load value. </para>        </briefdescription>
        <detaileddescription>
<para>This function get the system timer current value in MTIMER register. <simplesect kind="return"><para>current value(64bit) of system timer MTIMER register. </para></simplesect>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>Load value is 64bits wide.</para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1ga08c74ffae27d46218ae11321ff5e1673" kindref="member">SysTimer_SetLoadValue</ref> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="119" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="119" bodyend="122"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1ga52e85918789aa95fc4cd0d7238ca9b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> void</type>
        <definition>__STATIC_FORCEINLINE void SysTimer_SetCompareValue</definition>
        <argsstring>(uint64_t value)</argsstring>
        <name>SysTimer_SetCompareValue</name>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set system timer compare value. </para>        </briefdescription>
        <detaileddescription>
<para>This function set the system Timer compare value in MTIMERCMP register. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>compare value to set system timer MTIMERCMP register. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>Compare value is 64bits wide.</para></listitem><listitem><para>If compare value is larger than current value timer interrupt generate.</para></listitem><listitem><para>Modify the load value or compare value less to clear the interrupt.</para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1ga515d63f4e4581430fb0bf6e864e5bca9" kindref="member">SysTimer_GetCompareValue</ref> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="135" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="135" bodyend="138"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
        <referencedby refid="group__NMSIS__Core__SysTimer_1ga349805c25d9aa753c6fd69b3c0151126" compoundref="core__feature__timer_8h" startline="304" endline="312">SysTick_Config</referencedby>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1ga515d63f4e4581430fb0bf6e864e5bca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> uint64_t</type>
        <definition>__STATIC_FORCEINLINE uint64_t SysTimer_GetCompareValue</definition>
        <argsstring>(void)</argsstring>
        <name>SysTimer_GetCompareValue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get system timer compare value. </para>        </briefdescription>
        <detaileddescription>
<para>This function get the system timer compare value in MTIMERCMP register. <simplesect kind="return"><para>compare value of system timer MTIMERCMP register. </para></simplesect>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>Compare value is 64bits wide.</para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1ga52e85918789aa95fc4cd0d7238ca9b6c" kindref="member">SysTimer_SetCompareValue</ref> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="149" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="149" bodyend="152"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1ga95360ac7f66badad67c57d540a1ae4e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> void</type>
        <definition>__STATIC_FORCEINLINE void SysTimer_Start</definition>
        <argsstring>(void)</argsstring>
        <name>SysTimer_Start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Enable system timer counter running. </para>        </briefdescription>
        <detaileddescription>
<para>Enable system timer counter running by clear TIMESTOP bit in MTIMECTL register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="160" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="160" bodyend="163"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1gaab93093166696848e52d055a2e139e9f" compoundref="core__feature__timer_8h" startline="64">SysTimer_MTIMECTL_TIMESTOP_Msk</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1gaf74222f6d8c603f61571884732726e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> void</type>
        <definition>__STATIC_FORCEINLINE void SysTimer_Stop</definition>
        <argsstring>(void)</argsstring>
        <name>SysTimer_Stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Stop system timer counter running. </para>        </briefdescription>
        <detaileddescription>
<para>Stop system timer counter running by set TIMESTOP bit in MTIMECTL register. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="171" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="171" bodyend="174"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1gaab93093166696848e52d055a2e139e9f" compoundref="core__feature__timer_8h" startline="64">SysTimer_MTIMECTL_TIMESTOP_Msk</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1gaf0e25c3ad2965ce6cd523cd101cee16f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> void</type>
        <definition>__STATIC_FORCEINLINE void SysTimer_SetControlValue</definition>
        <argsstring>(uint32_t mctl)</argsstring>
        <name>SysTimer_SetControlValue</name>
        <param>
          <type>uint32_t</type>
          <declname>mctl</declname>
        </param>
        <briefdescription>
<para>Set system timer control value. </para>        </briefdescription>
        <detaileddescription>
<para>This function set the system timer MTIMECTL register value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mctl</parametername>
</parameternamelist>
<parameterdescription>
<para>value to set MTIMECTL register </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>Bit TIMESTOP is used to start and stop timer. Clear TIMESTOP bit to 0 to start timer, otherwise to stop timer.</para></listitem><listitem><para>Bit CMPCLREN is used to enable auto MTIMER clear to zero when MTIMER &gt;= MTIMERCMP. Clear CMPCLREN bit to 0 to stop auto clear MTIMER feature, otherwise to enable it.</para></listitem><listitem><para>Bit CLKSRC is used to select timer clock source. Clear CLKSRC bit to 0 to use <emphasis>mtime_toggle_a</emphasis>, otherwise use <emphasis>core_clk_aon</emphasis></para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1gafc922423699826bc5d833ab5d08219d2" kindref="member">SysTimer_GetControlValue</ref> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="190" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="190" bodyend="193"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga9b50cbd77c10af62deca85e3d2509c72" compoundref="core__feature__timer_8h" startline="75">SysTimer_MTIMECTL_Msk</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1gafc922423699826bc5d833ab5d08219d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> uint32_t</type>
        <definition>__STATIC_FORCEINLINE uint32_t SysTimer_GetControlValue</definition>
        <argsstring>(void)</argsstring>
        <name>SysTimer_GetControlValue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get system timer control value. </para>        </briefdescription>
        <detaileddescription>
<para>This function get the system timer MTIMECTL register value. <simplesect kind="return"><para>MTIMECTL register value </para></simplesect>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para><ref refid="group__NMSIS__Core__SysTimer_1gaf0e25c3ad2965ce6cd523cd101cee16f" kindref="member">SysTimer_SetControlValue</ref> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="203" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="203" bodyend="206"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga9b50cbd77c10af62deca85e3d2509c72" compoundref="core__feature__timer_8h" startline="75">SysTimer_MTIMECTL_Msk</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1gaa4d13cddf35ef77fd3b3b59e82eb1d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> void</type>
        <definition>__STATIC_FORCEINLINE void SysTimer_SetSWIRQ</definition>
        <argsstring>(void)</argsstring>
        <name>SysTimer_SetSWIRQ</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Trigger or set software interrupt via system timer. </para>        </briefdescription>
        <detaileddescription>
<para>This function set the system timer MSIP bit in MSIP register. <simplesect kind="remark"><para><itemizedlist>
<listitem><para>Set system timer MSIP bit and generate a SW interrupt.</para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1ga57b4f64ed87262daf831573e704b12c8" kindref="member">SysTimer_ClearSWIRQ</ref></para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1ga0431e3f4a44ca2265884c19096912729" kindref="member">SysTimer_GetMsipValue</ref> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="217" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="217" bodyend="220"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga62b819dc444c74f1424c50cf13fcb2a0" compoundref="core__feature__timer_8h" startline="71">SysTimer_MSIP_MSIP_Msk</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1ga57b4f64ed87262daf831573e704b12c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> void</type>
        <definition>__STATIC_FORCEINLINE void SysTimer_ClearSWIRQ</definition>
        <argsstring>(void)</argsstring>
        <name>SysTimer_ClearSWIRQ</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Clear system timer software interrupt pending request. </para>        </briefdescription>
        <detaileddescription>
<para>This function clear the system timer MSIP bit in MSIP register. <simplesect kind="remark"><para><itemizedlist>
<listitem><para>Clear system timer MSIP bit in MSIP register to clear the software interrupt pending.</para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1gaa4d13cddf35ef77fd3b3b59e82eb1d47" kindref="member">SysTimer_SetSWIRQ</ref></para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1ga0431e3f4a44ca2265884c19096912729" kindref="member">SysTimer_GetMsipValue</ref> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="231" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="231" bodyend="234"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga62b819dc444c74f1424c50cf13fcb2a0" compoundref="core__feature__timer_8h" startline="71">SysTimer_MSIP_MSIP_Msk</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1ga0431e3f4a44ca2265884c19096912729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> uint32_t</type>
        <definition>__STATIC_FORCEINLINE uint32_t SysTimer_GetMsipValue</definition>
        <argsstring>(void)</argsstring>
        <name>SysTimer_GetMsipValue</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get system timer MSIP register value. </para>        </briefdescription>
        <detaileddescription>
<para>This function get the system timer MSIP register value. <simplesect kind="return"><para>Value of Timer MSIP register. </para></simplesect>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>Bit0 is SW interrupt flag. Bit0 is 1 then SW interrupt set. Bit0 is 0 then SW interrupt clear.</para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1gaa4d13cddf35ef77fd3b3b59e82eb1d47" kindref="member">SysTimer_SetSWIRQ</ref></para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1ga57b4f64ed87262daf831573e704b12c8" kindref="member">SysTimer_ClearSWIRQ</ref> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="247" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="247" bodyend="250"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga40ba61e02d93e37ffbb6452b54806af6" compoundref="core__feature__timer_8h" startline="76">SysTimer_MSIP_Msk</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1gaa7f8e6c1423f582f958e151ce692395c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> void</type>
        <definition>__STATIC_FORCEINLINE void SysTimer_SetMsipValue</definition>
        <argsstring>(uint32_t msip)</argsstring>
        <name>SysTimer_SetMsipValue</name>
        <param>
          <type>uint32_t</type>
          <declname>msip</declname>
        </param>
        <briefdescription>
<para>Set system timer MSIP register value. </para>        </briefdescription>
        <detaileddescription>
<para>This function set the system timer MSIP register value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msip</parametername>
</parameternamelist>
<parameterdescription>
<para>value to set MSIP register </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="258" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="258" bodyend="261"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga40ba61e02d93e37ffbb6452b54806af6" compoundref="core__feature__timer_8h" startline="76">SysTimer_MSIP_Msk</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1gac41101f6eb4776148a05d1b02b643f8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> void</type>
        <definition>__STATIC_FORCEINLINE void SysTimer_SoftwareReset</definition>
        <argsstring>(void)</argsstring>
        <name>SysTimer_SoftwareReset</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Do software reset request. </para>        </briefdescription>
        <detaileddescription>
<para>This function will do software reset request through MTIMER<itemizedlist>
<listitem><para>Software need to write <ref refid="group__NMSIS__Core__SysTimer__Registers_1ga181dffb1870282631f8858ea23d9b8fa" kindref="member">SysTimer_MSFRST_KEY</ref> to generate software reset request</para></listitem><listitem><para>The software request flag can be cleared by reset operation to clear <simplesect kind="remark"><para></para></simplesect>
</para></listitem><listitem><para>The software reset is sent to SoC, SoC need to generate reset signal and send back to Core</para></listitem><listitem><para>This function will not return, it will do while(1) to wait the Core reset happened </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="273" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="273" bodyend="277"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga181dffb1870282631f8858ea23d9b8fa" compoundref="core__feature__timer_8h" startline="79">SysTimer_MSFRST_KEY</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1ga349805c25d9aa753c6fd69b3c0151126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gaba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> uint32_t</type>
        <definition>__STATIC_INLINE uint32_t SysTick_Config</definition>
        <argsstring>(uint64_t ticks)</argsstring>
        <name>SysTick_Config</name>
        <param>
          <type>uint64_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
<para>System Tick Configuration. </para>        </briefdescription>
        <detaileddescription>
<para>Initializes the System Timer and its non-vector interrupt, and starts the System Tick Timer.</para><para>In our default implementation, the timer counter will be set to zero, and it will start a timer compare non-vector interrupt when it matchs the ticks user set, during the timer interrupt user should reload the system tick using <ref refid="group__NMSIS__Core__SysTimer_1ga9906dae1937eac222354df5a9069945a" kindref="member">SysTick_Reload</ref> function or similar function written by user, so it can produce period timer interrupt. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of ticks between two interrupts. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 Function succeeded. </para><simplesectsep/><para>1 Function failed. </para></simplesect>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>For <ref refid="group__NMSIS__Core__VersionControl_1ga1b769df3cb99a779a9abaeb6e00d46f5" kindref="member">__NUCLEI_N_REV</ref> &gt;= 0x0104, the CMPCLREN bit in MTIMECTL is introduced, but we assume that the CMPCLREN bit is set to 0, so MTIMER register will not be auto cleared to 0 when MTIMER &gt;= MTIMERCMP.</para></listitem><listitem><para>When the variable __Vendor_SysTickConfig is set to 1, then the function <ref refid="group__NMSIS__Core__SysTimer_1ga349805c25d9aa753c6fd69b3c0151126" kindref="member">SysTick_Config</ref> is not included.</para></listitem><listitem><para>In this case, the file <bold>&lt;Device&gt;.h</bold> must contain a vendor-specific implementation of this function.</para></listitem><listitem><para>If user need this function to start a period timer interrupt, then in timer interrupt handler routine code, user should call <ref refid="group__NMSIS__Core__SysTimer_1ga9906dae1937eac222354df5a9069945a" kindref="member">SysTick_Reload</ref> with ticks to reload the timer.</para></listitem><listitem><para>This function only available when __SYSTIMER_PRESENT == 1 and __ECLIC_PRESENT == 1 and __Vendor_SysTickConfig == 0 </para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><ref refid="group__NMSIS__Core__SysTimer_1ga52e85918789aa95fc4cd0d7238ca9b6c" kindref="member">SysTimer_SetCompareValue</ref>; <ref refid="group__NMSIS__Core__SysTimer_1ga08c74ffae27d46218ae11321ff5e1673" kindref="member">SysTimer_SetLoadValue</ref> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="304" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="304" bodyend="312"/>
        <references refid="group__NMSIS__Core__IntExc_1gaef478ada8e8906c9fe8d4dc2311a39e1" compoundref="core__feature__eclic_8h" startline="218">ECLIC_EnableIRQ</references>
        <references refid="group__NMSIS__Core__ECLIC__Registers_1ga6a01697e0ba89c691f98fee801f4a25c" compoundref="core__feature__eclic_8h" startline="122">ECLIC_NON_VECTOR_INTERRUPT</references>
        <references refid="group__NMSIS__Core__IntExc_1gad6f35a2f69908b97b083c5e31c1c5aad" compoundref="core__feature__eclic_8h" startline="230">ECLIC_SetLevelIRQ</references>
        <references refid="group__NMSIS__Core__IntExc_1ga0bd2875fbd02a00bec78735940704c13" compoundref="core__feature__eclic_8h" startline="226">ECLIC_SetShvIRQ</references>
        <references refid="group__NMSIS__Core__IntExc_1gga7e1129cd8a196f4284d41db3e82ad5c8a1c65f7884cf42cfc70b0016245780dc9" compoundref="core__feature__eclic_8h" startline="182">SysTimer_IRQn</references>
        <references refid="group__NMSIS__Core__SysTimer_1ga52e85918789aa95fc4cd0d7238ca9b6c" compoundref="core__feature__timer_8h" startline="135" endline="138">SysTimer_SetCompareValue</references>
        <references refid="group__NMSIS__Core__SysTimer_1ga08c74ffae27d46218ae11321ff5e1673" compoundref="core__feature__timer_8h" startline="105" endline="108">SysTimer_SetLoadValue</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__SysTimer_1ga9906dae1937eac222354df5a9069945a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> uint32_t</type>
        <definition>__STATIC_FORCEINLINE uint32_t SysTick_Reload</definition>
        <argsstring>(uint64_t ticks)</argsstring>
        <name>SysTick_Reload</name>
        <param>
          <type>uint64_t</type>
          <declname>ticks</declname>
        </param>
        <briefdescription>
<para>System Tick Reload. </para>        </briefdescription>
        <detaileddescription>
<para>Reload the System Timer Tick when the MTIMECMP reached TIME value</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of ticks between two interrupts. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 Function succeeded. </para><simplesectsep/><para>1 Function failed. </para></simplesect>
<simplesect kind="remark"><para><itemizedlist>
<listitem><para>For <ref refid="group__NMSIS__Core__VersionControl_1ga1b769df3cb99a779a9abaeb6e00d46f5" kindref="member">__NUCLEI_N_REV</ref> &gt;= 0x0104, the CMPCLREN bit in MTIMECTL is introduced, but for this <ref refid="group__NMSIS__Core__SysTimer_1ga349805c25d9aa753c6fd69b3c0151126" kindref="member">SysTick_Config</ref> function, we assume this CMPCLREN bit is set to 0, so in interrupt handler function, user still need to set the MTIMERCMP or MTIMER to reload the system tick, if vendor want to use this timer&apos;s auto clear feature, they can define __Vendor_SysTickConfig to 1, and implement <ref refid="group__NMSIS__Core__SysTimer_1ga349805c25d9aa753c6fd69b3c0151126" kindref="member">SysTick_Config</ref> and <ref refid="group__NMSIS__Core__SysTimer_1ga9906dae1937eac222354df5a9069945a" kindref="member">SysTick_Reload</ref> functions.</para></listitem><listitem><para>When the variable __Vendor_SysTickConfig is set to 1, then the function <ref refid="group__NMSIS__Core__SysTimer_1ga9906dae1937eac222354df5a9069945a" kindref="member">SysTick_Reload</ref> is not included.</para></listitem><listitem><para>In this case, the file <bold>&lt;Device&gt;.h</bold> must contain a vendor-specific implementation of this function.</para></listitem><listitem><para>This function only available when __SYSTIMER_PRESENT == 1 and __ECLIC_PRESENT == 1 and __Vendor_SysTickConfig == 0 </para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para><ref refid="group__NMSIS__Core__SysTimer_1ga52e85918789aa95fc4cd0d7238ca9b6c" kindref="member">SysTimer_SetCompareValue</ref></para></listitem><listitem><para><ref refid="group__NMSIS__Core__SysTimer_1ga08c74ffae27d46218ae11321ff5e1673" kindref="member">SysTimer_SetLoadValue</ref> </para></listitem></itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" line="336" column="1" bodyfile="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h" bodystart="336" bodyend="340"/>
        <references refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" compoundref="core__feature__timer_8h" startline="87">SysTimer</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>System Timer feature API header file for Nuclei N/NX Core. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Nuclei<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);<sp/>you<sp/>may</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,<sp/>WITHOUT</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__CORE_FEATURE_TIMER_H__</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__CORE_FEATURE_TIMER_H__</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>System<sp/>Timer<sp/>Feature<sp/>Configuration<sp/>Macro:</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>1.<sp/>__SYSTIMER_PRESENT:<sp/><sp/>Define<sp/>whether<sp/>Private<sp/>System<sp/>Timer<sp/>is<sp/>present<sp/>or<sp/>not.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>0:<sp/>Not<sp/>present</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/>*<sp/>1:<sp/>Present</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>2.<sp/>__SYSTIMER_BASEADDR:<sp/><sp/>Define<sp/>the<sp/>base<sp/>address<sp/>of<sp/>the<sp/>System<sp/>Timer.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__SYSTIMER_PRESENT)<sp/>&amp;&amp;<sp/>(__SYSTIMER_PRESENT<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="52" refid="structSysTimer__Type" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53" refid="structSysTimer__Type_1a37a77647021a3ac0325d9337aa063cc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__PeriphAccess_1gab6caba5853a60a17e8e04499b52bf691" kindref="member">__IOM</ref><sp/>uint64_t<sp/><ref refid="structSysTimer__Type_1a37a77647021a3ac0325d9337aa063cc7" kindref="member">MTIMER</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="structSysTimer__Type_1a6dee6a8430c65e88e458d9fb90d4d8c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__PeriphAccess_1gab6caba5853a60a17e8e04499b52bf691" kindref="member">__IOM</ref><sp/>uint64_t<sp/><ref refid="structSysTimer__Type_1a6dee6a8430c65e88e458d9fb90d4d8c7" kindref="member">MTIMERCMP</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="structSysTimer__Type_1aedb1895f0e0be768277f230b4a461a24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__PeriphAccess_1gab6caba5853a60a17e8e04499b52bf691" kindref="member">__IOM</ref><sp/>uint32_t<sp/>RESERVED0[0x3F8];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="structSysTimer__Type_1a4bc27f5c3a0fefa7063ffbcf2b148f78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__PeriphAccess_1gab6caba5853a60a17e8e04499b52bf691" kindref="member">__IOM</ref><sp/>uint32_t<sp/><ref refid="structSysTimer__Type_1a4bc27f5c3a0fefa7063ffbcf2b148f78" kindref="member">MSFTRST</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="structSysTimer__Type_1a1cec32637a87c4fdd59bf526325755cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__PeriphAccess_1gab6caba5853a60a17e8e04499b52bf691" kindref="member">__IOM</ref><sp/>uint32_t<sp/><ref refid="structSysTimer__Type_1a1cec32637a87c4fdd59bf526325755cb" kindref="member">RESERVED1</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="structSysTimer__Type_1a2e64638a3327d7932455185033bab733" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__PeriphAccess_1gab6caba5853a60a17e8e04499b52bf691" kindref="member">__IOM</ref><sp/>uint32_t<sp/><ref refid="structSysTimer__Type_1a2e64638a3327d7932455185033bab733" kindref="member">MTIMECTL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="structSysTimer__Type_1a5e43fade844d5c21f68c9bace205ef47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__PeriphAccess_1gab6caba5853a60a17e8e04499b52bf691" kindref="member">__IOM</ref><sp/>uint32_t<sp/><ref refid="structSysTimer__Type_1a5e43fade844d5c21f68c9bace205ef47" kindref="member">MSIP</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/><ref refid="structSysTimer__Type" kindref="compound">SysTimer_Type</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Timer<sp/>Control<sp/>/<sp/>Status<sp/>Register<sp/>Definitions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="group__NMSIS__Core__SysTimer__Registers_1ga54ecde494dc735799ed978b91bf709d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SysTimer_MTIMECTL_TIMESTOP_Pos<sp/><sp/><sp/><sp/><sp/><sp/>0U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="group__NMSIS__Core__SysTimer__Registers_1gaab93093166696848e52d055a2e139e9f" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MTIMECTL_TIMESTOP_Msk<sp/><sp/><sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>SysTimer_MTIMECTL_TIMESTOP_Pos)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="group__NMSIS__Core__SysTimer__Registers_1gac0cd51358c944397328146b6f4a4a8a5" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MTIMECTL_CMPCLREN_Pos<sp/><sp/><sp/><sp/><sp/><sp/>1U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="group__NMSIS__Core__SysTimer__Registers_1ga5d372de2d560f90d8ed8306277068cf1" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MTIMECTL_CMPCLREN_Msk<sp/><sp/><sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>SysTimer_MTIMECTL_CMPCLREN_Pos)<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="group__NMSIS__Core__SysTimer__Registers_1ga4ee15edaeadcd48a5aaab1aa9ec20496" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MTIMECTL_CLKSRC_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="group__NMSIS__Core__SysTimer__Registers_1ga2513c82f2ce2811952b83f6d1c8e4172" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MTIMECTL_CLKSRC_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>SysTimer_MTIMECTL_CLKSRC_Pos)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="group__NMSIS__Core__SysTimer__Registers_1gad756a0be76154b3f64f6790663581c52" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MSIP_MSIP_Pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0U<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="group__NMSIS__Core__SysTimer__Registers_1ga62b819dc444c74f1424c50cf13fcb2a0" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MSIP_MSIP_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>SysTimer_MSIP_MSIP_Pos)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="group__NMSIS__Core__SysTimer__Registers_1gacffb8ad26cdd32cef2ee67bde9ddb122" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MTIMER_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFFFFFFFFFFFFFFFFULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="group__NMSIS__Core__SysTimer__Registers_1ga0fb8a9811b2d773529fb0f7db866e5e5" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MTIMERCMP_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFFFFFFFFFFFFFFFFULL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="group__NMSIS__Core__SysTimer__Registers_1ga9b50cbd77c10af62deca85e3d2509c72" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MTIMECTL_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFFFFFFFFUL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="group__NMSIS__Core__SysTimer__Registers_1ga40ba61e02d93e37ffbb6452b54806af6" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MSIP_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFFFFFFFFUL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="group__NMSIS__Core__SysTimer__Registers_1ga1028d9f654728860327c082a44b9f34f" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MSFTRST_Msk<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFFFFFFFFUL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="group__NMSIS__Core__SysTimer__Registers_1ga181dffb1870282631f8858ea23d9b8fa" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer_MSFRST_KEY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x80000A5FUL)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor">#ifndef<sp/>__SYSTIMER_BASEADDR</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Base<sp/>address<sp/>of<sp/>SYSTIMER(__SYSTIMER_BASEADDR)<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>&lt;Device.h&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;__SYSTIMER_BASEADDR<sp/>is<sp/>not<sp/>defined,<sp/>please<sp/>check!&quot;</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>System<sp/>Timer<sp/>Memory<sp/>mapping<sp/>of<sp/>Device<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="group__NMSIS__Core__SysTimer__Registers_1ga2107a0ae6d9deefff31edf506a6e1e91" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SysTimer_BASE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__SYSTIMER_BASEADDR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" refkind="member"><highlight class="preprocessor">#define<sp/>SysTimer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SysTimer_Type<sp/>*)<sp/>SysTimer_BASE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>group<sp/>NMSIS_Core_SysTimer_Registers<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>##################################<sp/><sp/><sp/><sp/>SysTimer<sp/>function<sp/><sp/>############################################<sp/>*/</highlight></codeline>
<codeline lineno="105" refid="group__NMSIS__Core__SysTimer_1ga08c74ffae27d46218ae11321ff5e1673" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NMSIS__Core__SysTimer_1ga08c74ffae27d46218ae11321ff5e1673" kindref="member">SysTimer_SetLoadValue</ref>(uint64_t<sp/>value)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MTIMER<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="group__NMSIS__Core__SysTimer_1ga5b454e48769abd7a88c2cc65fe53ac7a" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/>uint64_t<sp/><ref refid="group__NMSIS__Core__SysTimer_1ga5b454e48769abd7a88c2cc65fe53ac7a" kindref="member">SysTimer_GetLoadValue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MTIMER;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="group__NMSIS__Core__SysTimer_1ga52e85918789aa95fc4cd0d7238ca9b6c" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NMSIS__Core__SysTimer_1ga52e85918789aa95fc4cd0d7238ca9b6c" kindref="member">SysTimer_SetCompareValue</ref>(uint64_t<sp/>value)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MTIMERCMP<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="group__NMSIS__Core__SysTimer_1ga515d63f4e4581430fb0bf6e864e5bca9" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/>uint64_t<sp/><ref refid="group__NMSIS__Core__SysTimer_1ga515d63f4e4581430fb0bf6e864e5bca9" kindref="member">SysTimer_GetCompareValue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MTIMERCMP;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="group__NMSIS__Core__SysTimer_1ga95360ac7f66badad67c57d540a1ae4e1" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NMSIS__Core__SysTimer_1ga95360ac7f66badad67c57d540a1ae4e1" kindref="member">SysTimer_Start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MTIMECTL<sp/>&amp;=<sp/>~(<ref refid="group__NMSIS__Core__SysTimer__Registers_1gaab93093166696848e52d055a2e139e9f" kindref="member">SysTimer_MTIMECTL_TIMESTOP_Msk</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="group__NMSIS__Core__SysTimer_1gaf74222f6d8c603f61571884732726e91" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NMSIS__Core__SysTimer_1gaf74222f6d8c603f61571884732726e91" kindref="member">SysTimer_Stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MTIMECTL<sp/>|=<sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1gaab93093166696848e52d055a2e139e9f" kindref="member">SysTimer_MTIMECTL_TIMESTOP_Msk</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="group__NMSIS__Core__SysTimer_1gaf0e25c3ad2965ce6cd523cd101cee16f" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NMSIS__Core__SysTimer_1gaf0e25c3ad2965ce6cd523cd101cee16f" kindref="member">SysTimer_SetControlValue</ref>(uint32_t<sp/>mctl)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MTIMECTL<sp/>=<sp/>(mctl<sp/>&amp;<sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga9b50cbd77c10af62deca85e3d2509c72" kindref="member">SysTimer_MTIMECTL_Msk</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="group__NMSIS__Core__SysTimer_1gafc922423699826bc5d833ab5d08219d2" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/>uint32_t<sp/><ref refid="group__NMSIS__Core__SysTimer_1gafc922423699826bc5d833ab5d08219d2" kindref="member">SysTimer_GetControlValue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MTIMECTL<sp/>&amp;<sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga9b50cbd77c10af62deca85e3d2509c72" kindref="member">SysTimer_MTIMECTL_Msk</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="group__NMSIS__Core__SysTimer_1gaa4d13cddf35ef77fd3b3b59e82eb1d47" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NMSIS__Core__SysTimer_1gaa4d13cddf35ef77fd3b3b59e82eb1d47" kindref="member">SysTimer_SetSWIRQ</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MSIP<sp/>|=<sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga62b819dc444c74f1424c50cf13fcb2a0" kindref="member">SysTimer_MSIP_MSIP_Msk</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="group__NMSIS__Core__SysTimer_1ga57b4f64ed87262daf831573e704b12c8" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NMSIS__Core__SysTimer_1ga57b4f64ed87262daf831573e704b12c8" kindref="member">SysTimer_ClearSWIRQ</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MSIP<sp/>&amp;=<sp/>~<ref refid="group__NMSIS__Core__SysTimer__Registers_1ga62b819dc444c74f1424c50cf13fcb2a0" kindref="member">SysTimer_MSIP_MSIP_Msk</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="group__NMSIS__Core__SysTimer_1ga0431e3f4a44ca2265884c19096912729" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/>uint32_t<sp/><ref refid="group__NMSIS__Core__SysTimer_1ga0431e3f4a44ca2265884c19096912729" kindref="member">SysTimer_GetMsipValue</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)(<ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MSIP<sp/>&amp;<sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga40ba61e02d93e37ffbb6452b54806af6" kindref="member">SysTimer_MSIP_Msk</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="group__NMSIS__Core__SysTimer_1gaa7f8e6c1423f582f958e151ce692395c" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NMSIS__Core__SysTimer_1gaa7f8e6c1423f582f958e151ce692395c" kindref="member">SysTimer_SetMsipValue</ref>(uint32_t<sp/>msip)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MSIP<sp/>=<sp/>(msip<sp/>&amp;<sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga40ba61e02d93e37ffbb6452b54806af6" kindref="member">SysTimer_MSIP_Msk</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="group__NMSIS__Core__SysTimer_1gac41101f6eb4776148a05d1b02b643f8e" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__NMSIS__Core__SysTimer_1gac41101f6eb4776148a05d1b02b643f8e" kindref="member">SysTimer_SoftwareReset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MSFTRST<sp/>=<sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga181dffb1870282631f8858ea23d9b8fa" kindref="member">SysTimer_MSFRST_KEY</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__Vendor_SysTickConfig)<sp/>&amp;&amp;<sp/>(__Vendor_SysTickConfig<sp/>==<sp/>0U)<sp/>&amp;&amp;<sp/>defined(__ECLIC_PRESENT)<sp/>&amp;&amp;<sp/>(__ECLIC_PRESENT<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="304" refid="group__NMSIS__Core__SysTimer_1ga349805c25d9aa753c6fd69b3c0151126" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gaba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/>uint32_t<sp/><ref refid="group__NMSIS__Core__SysTimer_1ga349805c25d9aa753c6fd69b3c0151126" kindref="member">SysTick_Config</ref>(uint64_t<sp/>ticks)</highlight></codeline>
<codeline lineno="305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer_1ga08c74ffae27d46218ae11321ff5e1673" kindref="member">SysTimer_SetLoadValue</ref>(0);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer_1ga52e85918789aa95fc4cd0d7238ca9b6c" kindref="member">SysTimer_SetCompareValue</ref>(ticks);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__IntExc_1ga0bd2875fbd02a00bec78735940704c13" kindref="member">ECLIC_SetShvIRQ</ref>(<ref refid="group__NMSIS__Core__IntExc_1gga7e1129cd8a196f4284d41db3e82ad5c8a1c65f7884cf42cfc70b0016245780dc9" kindref="member">SysTimer_IRQn</ref>,<sp/><ref refid="group__NMSIS__Core__ECLIC__Registers_1ga6a01697e0ba89c691f98fee801f4a25c" kindref="member">ECLIC_NON_VECTOR_INTERRUPT</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__IntExc_1gad6f35a2f69908b97b083c5e31c1c5aad" kindref="member">ECLIC_SetLevelIRQ</ref>(<ref refid="group__NMSIS__Core__IntExc_1gga7e1129cd8a196f4284d41db3e82ad5c8a1c65f7884cf42cfc70b0016245780dc9" kindref="member">SysTimer_IRQn</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__IntExc_1gaef478ada8e8906c9fe8d4dc2311a39e1" kindref="member">ECLIC_EnableIRQ</ref>(<ref refid="group__NMSIS__Core__IntExc_1gga7e1129cd8a196f4284d41db3e82ad5c8a1c65f7884cf42cfc70b0016245780dc9" kindref="member">SysTimer_IRQn</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0UL);</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="group__NMSIS__Core__SysTimer_1ga9906dae1937eac222354df5a9069945a" refkind="member"><highlight class="normal"><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref><sp/>uint32_t<sp/><ref refid="group__NMSIS__Core__SysTimer_1ga9906dae1937eac222354df5a9069945a" kindref="member">SysTick_Reload</ref>(uint64_t<sp/>ticks)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MTIMERCMP<sp/>=<sp/>ticks<sp/>+<sp/><ref refid="group__NMSIS__Core__SysTimer__Registers_1ga55d0982631fe5ecbcfbb808913f6ad99" kindref="member">SysTimer</ref>-&gt;MTIMER;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(0UL);</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(__Vendor_SysTickConfig)<sp/>&amp;&amp;<sp/>(__Vendor_SysTickConfig<sp/>==<sp/>0U)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>Doxygen<sp/>Group<sp/>NMSIS_Core_SysTimer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>defined(__SYSTIMER_PRESENT)<sp/>&amp;&amp;<sp/>(__SYSTIMER_PRESENT<sp/>==<sp/>1)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/Nuclei-Software/NMSIS/NMSIS/Core/Include/core_feature_timer.h"/>
  </compounddef>
</doxygen>
