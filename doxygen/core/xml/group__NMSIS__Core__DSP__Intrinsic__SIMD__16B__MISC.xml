<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__NMSIS__Core__DSP__Intrinsic__SIMD__16B__MISC" kind="group">
    <compoundname>NMSIS_Core_DSP_Intrinsic_SIMD_16B_MISC</compoundname>
    <title>SIMD 16-bit Miscellaneous Instructions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__NMSIS__Core__DSP__Intrinsic__SIMD__16B__MISC_1ga368e2f49b0007ec1776f04ba5a850226" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> unsigned long</type>
        <definition>__STATIC_FORCEINLINE unsigned long __RV_CLRS16</definition>
        <argsstring>(unsigned long a)</argsstring>
        <name>__RV_CLRS16</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>CLRS16 (SIMD 16-bit Count Leading Redundant Sign) </para>        </briefdescription>
        <detaileddescription>
<para><bold>Type</bold>: SIMD</para><para><bold>Syntax</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">CLRS16<sp/>Rd,<sp/>Rs1</highlight></codeline>
</programlisting></para><para><bold>Purpose</bold>:<linebreak/>
Count the number of redundant sign bits of the 16-bit elements of a general register.</para><para><bold>Description</bold>:<linebreak/>
Starting from the bits next to the sign bits of the 16-bit elements of Rs1, this instruction counts the number of redundant sign bits and writes the result to the corresponding 16- bit elements of Rd.</para><para><bold>Operations</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">snum[x]<sp/>=<sp/>Rs1.H[x];</highlight></codeline>
<codeline><highlight class="normal">cnt[x]<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">for<sp/>(i<sp/>=<sp/>14<sp/>to<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(snum[x](i)<sp/>==<sp/>snum[x](15))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cnt[x]<sp/>=<sp/>cnt[x]<sp/>+<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">Rd.H[x]<sp/>=<sp/>cnt[x];</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV32:<sp/>x=1...0</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV64:<sp/>x=3...0</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" line="733" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" bodystart="733" bodyend="738"/>
        <references refid="group__NMSIS__Core__CompilerControl_1ga1378040bcf22428955c6e3ce9c2053cd" compoundref="nmsis__gcc_8h" startline="59">__ASM</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__DSP__Intrinsic__SIMD__16B__MISC_1ga00c822eb5d2a5b1ff5bc88790a43103c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> unsigned long</type>
        <definition>__STATIC_FORCEINLINE unsigned long __RV_CLO16</definition>
        <argsstring>(unsigned long a)</argsstring>
        <name>__RV_CLO16</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>CLO16 (SIMD 16-bit Count Leading One) </para>        </briefdescription>
        <detaileddescription>
<para><bold>Type</bold>: SIMD</para><para><bold>Syntax</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">CLO16<sp/>Rd,<sp/>Rs1</highlight></codeline>
</programlisting></para><para><bold>Purpose</bold>:<linebreak/>
Count the number of leading one bits of the 16-bit elements of a general register.</para><para><bold>Description</bold>:<linebreak/>
Starting from the most significant bits of the 16-bit elements of Rs1, this instruction counts the number of leading one bits and writes the results to the corresponding 16-bit elements of Rd.</para><para><bold>Operations</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">snum[x]<sp/>=<sp/>Rs1.H[x];</highlight></codeline>
<codeline><highlight class="normal">cnt[x]<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">for<sp/>(i<sp/>=<sp/>15<sp/>to<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(snum[x](i)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cnt[x]<sp/>=<sp/>cnt[x]<sp/>+<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">Rd.H[x]<sp/>=<sp/>cnt[x];</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV32:<sp/>x=1...0</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV64:<sp/>x=3...0</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" line="874" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" bodystart="874" bodyend="879"/>
        <references refid="group__NMSIS__Core__CompilerControl_1ga1378040bcf22428955c6e3ce9c2053cd" compoundref="nmsis__gcc_8h" startline="59">__ASM</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__DSP__Intrinsic__SIMD__16B__MISC_1ga862e937fdf95c754472d41ab2df392f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> unsigned long</type>
        <definition>__STATIC_FORCEINLINE unsigned long __RV_CLZ16</definition>
        <argsstring>(unsigned long a)</argsstring>
        <name>__RV_CLZ16</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>CLZ16 (SIMD 16-bit Count Leading Zero) </para>        </briefdescription>
        <detaileddescription>
<para><bold>Type</bold>: SIMD</para><para><bold>Syntax</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">CLZ16<sp/>Rd,<sp/>Rs1</highlight></codeline>
</programlisting></para><para><bold>Purpose</bold>:<linebreak/>
Count the number of leading zero bits of the 16-bit elements of a general register.</para><para><bold>Description</bold>:<linebreak/>
Starting from the most significant bits of the 16-bit elements of Rs1, this instruction counts the number of leading zero bits and writes the results to the corresponding 16-bit elements of Rd.</para><para><bold>Operations</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">snum[x]<sp/>=<sp/>Rs1.H[x];</highlight></codeline>
<codeline><highlight class="normal">cnt[x]<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">for<sp/>(i<sp/>=<sp/>15<sp/>to<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(snum[x](i)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cnt[x]<sp/>=<sp/>cnt[x]<sp/>+<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">Rd.H[x]<sp/>=<sp/>cnt[x];</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV32:<sp/>x=1...0</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV64:<sp/>x=3...0</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" line="1015" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" bodystart="1015" bodyend="1020"/>
        <references refid="group__NMSIS__Core__CompilerControl_1ga1378040bcf22428955c6e3ce9c2053cd" compoundref="nmsis__gcc_8h" startline="59">__ASM</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__DSP__Intrinsic__SIMD__16B__MISC_1ga2144ee330b7d084593a38bc98919399c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> unsigned long</type>
        <definition>__STATIC_FORCEINLINE unsigned long __RV_KABS16</definition>
        <argsstring>(unsigned long a)</argsstring>
        <name>__RV_KABS16</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>KABS16 (SIMD 16-bit Saturating Absolute) </para>        </briefdescription>
        <detaileddescription>
<para><bold>Type</bold>: SIMD</para><para><bold>Syntax</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">KABS16<sp/>Rd,<sp/>Rs1</highlight></codeline>
</programlisting></para><para><bold>Purpose</bold>:<linebreak/>
Get the absolute value of 16-bit signed integer elements simultaneously.</para><para><bold>Description</bold>:<linebreak/>
This instruction calculates the absolute value of 16-bit signed integer elements stored in Rs1 and writes the element results to Rd. If the input number is 0x8000, this instruction generates 0x7fff as the output and sets the OV bit to 1.</para><para><bold>Operations</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">src<sp/>=<sp/>Rs1.H[x];</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(src<sp/>==<sp/>0x8000)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>src<sp/>=<sp/>0x7fff;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>OV<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal">}<sp/>else<sp/>if<sp/>(src[15]<sp/>==<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>src<sp/>=<sp/>-src;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">Rd.H[x]<sp/>=<sp/>src;</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV32:<sp/>x=1...0,</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV64:<sp/>x=3...0</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" line="1367" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" bodystart="1367" bodyend="1372"/>
        <references refid="group__NMSIS__Core__CompilerControl_1ga1378040bcf22428955c6e3ce9c2053cd" compoundref="nmsis__gcc_8h" startline="59">__ASM</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__DSP__Intrinsic__SIMD__16B__MISC_1ga4025d5f632fcaa18a002c764daa577bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> unsigned long</type>
        <definition>__STATIC_FORCEINLINE unsigned long __RV_SCLIP16</definition>
        <argsstring>(unsigned long a, unsigned int b)</argsstring>
        <name>__RV_SCLIP16</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>SCLIP16 (SIMD 16-bit Signed Clip Value) </para>        </briefdescription>
        <detaileddescription>
<para><bold>Type</bold>: SIMD</para><para><bold>Syntax</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">SCLIP16<sp/>Rd,<sp/>Rs1,<sp/>imm4u[3:0]</highlight></codeline>
</programlisting></para><para><bold>Purpose</bold>:<linebreak/>
Limit the 16-bit signed integer elements of a register into a signed range simultaneously.</para><para><bold>Description</bold>:<linebreak/>
This instruction limits the 16-bit signed integer elements stored in Rs1 into a signed integer range between 2imm4u-1 and -2imm4u, and writes the limited results to Rd. For example, if imm4u is 3, the 16-bit input values should be saturated between 7 and -8. If saturation is performed, set OV bit to 1.</para><para><bold>Operations</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">src<sp/>=<sp/>Rs1.H[x];</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(src<sp/>&gt;<sp/>(2^imm4u)-1)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>src<sp/>=<sp/>(2^imm4u)-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>OV<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal">}<sp/>else<sp/>if<sp/>(src<sp/>&lt;<sp/>-2^imm4u)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>src<sp/>=<sp/>-2^imm4u;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>OV<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">Rd.H[x]<sp/>=<sp/>src</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV32:<sp/>x=1...0,</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV64:<sp/>x=3...0</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" line="6869" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" bodystart="6869" bodyend="6874"/>
        <references refid="group__NMSIS__Core__CompilerControl_1ga1378040bcf22428955c6e3ce9c2053cd" compoundref="nmsis__gcc_8h" startline="59">__ASM</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__DSP__Intrinsic__SIMD__16B__MISC_1ga9fefb44ce69dae8452a1f78462b36ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> unsigned long</type>
        <definition>__STATIC_FORCEINLINE unsigned long __RV_SMAX16</definition>
        <argsstring>(unsigned long a, unsigned long b)</argsstring>
        <name>__RV_SMAX16</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>SMAX16 (SIMD 16-bit Signed Maximum) </para>        </briefdescription>
        <detaileddescription>
<para><bold>Type</bold>: SIMD</para><para><bold>Syntax</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">SMAX16<sp/>Rd,<sp/>Rs1,<sp/>Rs2</highlight></codeline>
</programlisting></para><para><bold>Purpose</bold>:<linebreak/>
Do 16-bit signed integer elements finding maximum operations simultaneously.</para><para><bold>Description</bold>:<linebreak/>
This instruction compares the 16-bit signed integer elements in Rs1 with the 16-bit signed integer elements in Rs2 and selects the numbers that is greater than the other one. The selected results are written to Rd.</para><para><bold>Operations</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">Rd.H[x]<sp/>=<sp/>(Rs1.H[x]<sp/>&gt;<sp/>Rs2.H[x])?<sp/>Rs1.H[x]<sp/>:<sp/>Rs2.H[x];</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV32:<sp/>x=1...0,</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV64:<sp/>x=3...0</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" line="8203" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" bodystart="8203" bodyend="8208"/>
        <references refid="group__NMSIS__Core__CompilerControl_1ga1378040bcf22428955c6e3ce9c2053cd" compoundref="nmsis__gcc_8h" startline="59">__ASM</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__DSP__Intrinsic__SIMD__16B__MISC_1ga5b8419c5f8c624d1a0e16c43efb798eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> unsigned long</type>
        <definition>__STATIC_FORCEINLINE unsigned long __RV_SMIN16</definition>
        <argsstring>(unsigned long a, unsigned long b)</argsstring>
        <name>__RV_SMIN16</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>SMIN16 (SIMD 16-bit Signed Minimum) </para>        </briefdescription>
        <detaileddescription>
<para><bold>Type</bold>: SIMD</para><para><bold>Syntax</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">SMIN16<sp/>Rd,<sp/>Rs1,<sp/>Rs2</highlight></codeline>
</programlisting></para><para><bold>Purpose</bold>:<linebreak/>
Do 16-bit signed integer elements finding minimum operations simultaneously.</para><para><bold>Description</bold>:<linebreak/>
This instruction compares the 16-bit signed integer elements in Rs1 with the 16-bit signed integer elements in Rs2 and selects the numbers that is less than the other one. The selected results are written to Rd.</para><para><bold>Operations</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">Rd.H[x]<sp/>=<sp/>(Rs1.H[x]<sp/>&lt;<sp/>Rs2.H[x])?<sp/>Rs1.H[x]<sp/>:<sp/>Rs2.H[x];</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV32:<sp/>x=1...0,</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV64:<sp/>x=3...0</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" line="8614" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" bodystart="8614" bodyend="8619"/>
        <references refid="group__NMSIS__Core__CompilerControl_1ga1378040bcf22428955c6e3ce9c2053cd" compoundref="nmsis__gcc_8h" startline="59">__ASM</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__DSP__Intrinsic__SIMD__16B__MISC_1ga562f85675e7444c4fb1e5e6c28c3c6c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> unsigned long</type>
        <definition>__STATIC_FORCEINLINE unsigned long __RV_UCLIP16</definition>
        <argsstring>(unsigned long a, unsigned int b)</argsstring>
        <name>__RV_UCLIP16</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>UCLIP16 (SIMD 16-bit Unsigned Clip Value) </para>        </briefdescription>
        <detaileddescription>
<para><bold>Type</bold>: SIMD</para><para><bold>Syntax</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">UCLIP16<sp/>Rt,<sp/>Ra,<sp/>imm4u</highlight></codeline>
</programlisting></para><para><bold>Purpose</bold>:<linebreak/>
Limit the 16-bit signed elements of a register into an unsigned range simultaneously.</para><para><bold>Description</bold>:<linebreak/>
This instruction limits the 16-bit signed elements stored in Rs1 into an unsigned integer range between 2imm4u-1 and 0, and writes the limited results to Rd. For example, if imm4u is 3, the 16-bit input values should be saturated between 7 and 0. If saturation is performed, set OV bit to 1.</para><para><bold>Operations</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">src<sp/>=<sp/>Rs1.H[x];</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(src<sp/>&gt;<sp/>(2^imm4u)-1)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>src<sp/>=<sp/>(2^imm4u)-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>OV<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal">}<sp/>else<sp/>if<sp/>(src<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>src<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>OV<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">Rd.H[x]<sp/>=<sp/>src;</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV32:<sp/>x=1...0,</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV64:<sp/>x=3...0</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" line="11053" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" bodystart="11053" bodyend="11058"/>
        <references refid="group__NMSIS__Core__CompilerControl_1ga1378040bcf22428955c6e3ce9c2053cd" compoundref="nmsis__gcc_8h" startline="59">__ASM</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__DSP__Intrinsic__SIMD__16B__MISC_1gaa75623ba7f5f23a440782f47f62f1f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> unsigned long</type>
        <definition>__STATIC_FORCEINLINE unsigned long __RV_UMAX16</definition>
        <argsstring>(unsigned long a, unsigned long b)</argsstring>
        <name>__RV_UMAX16</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>UMAX16 (SIMD 16-bit Unsigned Maximum) </para>        </briefdescription>
        <detaileddescription>
<para><bold>Type</bold>: SIMD</para><para><bold>Syntax</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">UMAX16<sp/>Rd,<sp/>Rs1,<sp/>Rs2</highlight></codeline>
</programlisting></para><para><bold>Purpose</bold>:<linebreak/>
Do 16-bit unsigned integer elements finding maximum operations simultaneously.</para><para><bold>Description</bold>:<linebreak/>
This instruction compares the 16-bit unsigned integer elements in Rs1 with the 16-bit unsigned integer elements in Rs2 and selects the numbers that is greater than the other one. The selected results are written to Rd.</para><para><bold>Operations</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">Rd.H[x]<sp/>=<sp/>(Rs1.H[x]<sp/>&gt;u<sp/>Rs2.H[x])?<sp/>Rs1.H[x]<sp/>:<sp/>Rs2.H[x];</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV32:<sp/>x=1...0,</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV64:<sp/>x=3...0</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" line="12266" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" bodystart="12266" bodyend="12271"/>
        <references refid="group__NMSIS__Core__CompilerControl_1ga1378040bcf22428955c6e3ce9c2053cd" compoundref="nmsis__gcc_8h" startline="59">__ASM</references>
      </memberdef>
      <memberdef kind="function" id="group__NMSIS__Core__DSP__Intrinsic__SIMD__16B__MISC_1gaa7c689ce557d35cb4847d43846579a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__NMSIS__Core__CompilerControl_1gab904513442afdf77d4f8c74f23cbb040" kindref="member">__STATIC_FORCEINLINE</ref> unsigned long</type>
        <definition>__STATIC_FORCEINLINE unsigned long __RV_UMIN16</definition>
        <argsstring>(unsigned long a, unsigned long b)</argsstring>
        <name>__RV_UMIN16</name>
        <param>
          <type>unsigned long</type>
          <declname>a</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>UMIN16 (SIMD 16-bit Unsigned Minimum) </para>        </briefdescription>
        <detaileddescription>
<para><bold>Type</bold>: SIMD</para><para><bold>Syntax</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">UMIN16<sp/>Rd,<sp/>Rs1,<sp/>Rs2</highlight></codeline>
</programlisting></para><para><bold>Purpose</bold>:<linebreak/>
Do 16-bit unsigned integer elements finding minimum operations simultaneously.</para><para><bold>Description</bold>:<linebreak/>
This instruction compares the 16-bit unsigned integer elements in Rs1 with the 16-bit unsigned integer elements in Rs2 and selects the numbers that is less than the other one. The selected results are written to Rd.</para><para><bold>Operations</bold>:<linebreak/>
<programlisting><codeline><highlight class="normal">Rd.H[x]<sp/>=<sp/>(Rs1.H[x]<sp/>&lt;u<sp/>Rs2.H[x])?<sp/>Rs1.H[x]<sp/>:<sp/>Rs2.H[x];</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV32:<sp/>x=1...0,</highlight></codeline>
<codeline><highlight class="normal">for<sp/>RV64:<sp/>x=3...0</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" line="12344" column="1" bodyfile="/home/xl_ci/gitlab-runner/builds/f5c994c2/0/software/library/cmsis-5-riscv/CMSIS/nmsis_release/NMSIS/Core/Include/core_feature_dsp.h" bodystart="12344" bodyend="12349"/>
        <references refid="group__NMSIS__Core__CompilerControl_1ga1378040bcf22428955c6e3ce9c2053cd" compoundref="nmsis__gcc_8h" startline="59">__ASM</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>SIMD 16-bit Miscellaneous Instructions. </para>    </briefdescription>
    <detaileddescription>
<para>there are 10 SIMD 16-bit Misc instructions. </para>    </detaileddescription>
  </compounddef>
</doxygen>
